basePath: /api/v1
definitions:
  auth.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  auth.RegisterRequest:
    properties:
      email:
        type: string
      password:
        minLength: 6
        type: string
      role:
        description: 可选，默认为 "reader"
        type: string
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
  bookstore.BookDetail:
    properties:
      author:
        description: 作者名
        maxLength: 100
        minLength: 1
        type: string
      author_id:
        description: 作者ID
        type: string
      categories:
        description: 分类列表
        items:
          type: string
        type: array
      category_ids:
        description: 分类ID列表
        items:
          type: string
        type: array
      chapter_count:
        description: 章节数
        minimum: 0
        type: integer
      collect_count:
        description: 收藏数
        minimum: 0
        type: integer
      comment_count:
        description: 评论数
        minimum: 0
        type: integer
      completed_at:
        description: 完结时间
        type: string
      cover_url:
        description: 封面图片URL
        type: string
      created_at:
        description: 创建时间
        type: string
      description:
        description: 详细描述
        maxLength: 5000
        type: string
      id:
        description: 书籍ID
        type: string
      introduction:
        description: 简介
        maxLength: 1000
        type: string
      is_free:
        description: 是否免费
        type: boolean
      last_chapter_at:
        description: 最新章节更新时间
        type: string
      last_chapter_title:
        description: 最新章节信息
        type: string
      like_count:
        description: 点赞数
        minimum: 0
        type: integer
      price:
        description: 价格（按章节或全本）
        minimum: 0
        type: number
      rating:
        description: 评分
        maximum: 5
        minimum: 0
        type: number
      rating_count:
        description: 评分人数
        minimum: 0
        type: integer
      serialized_at:
        description: 网络小说特有字段
        type: string
      share_count:
        description: 分享数
        minimum: 0
        type: integer
      status:
        allOf:
        - $ref: '#/definitions/bookstore.BookStatus'
        description: 状态
      subtitle:
        description: 副标题
        maxLength: 200
        type: string
      tags:
        description: 标签
        items:
          type: string
        type: array
      title:
        description: 书名
        maxLength: 200
        minLength: 1
        type: string
      updated_at:
        description: 更新时间
        type: string
      view_count:
        description: 统计数据
        minimum: 0
        type: integer
      word_count:
        description: 总字数
        minimum: 0
        type: integer
    required:
    - author
    - title
    type: object
  bookstore.BookRating:
    properties:
      book_id:
        type: string
      comment:
        type: string
      created_at:
        type: string
      id:
        type: string
      likes:
        type: integer
      rating:
        description: 1-5星
        type: integer
      tags:
        items:
          type: string
        type: array
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  bookstore.BookStatus:
    enum:
    - draft
    - published
    - ongoing
    - completed
    - paused
    type: string
    x-enum-comments:
      BookStatusCompleted: 已完结
      BookStatusDraft: 草稿
      BookStatusOngoing: 连载中
      BookStatusPaused: 暂停更新
      BookStatusPublished: 已发布
    x-enum-descriptions:
    - 草稿
    - 已发布
    - 连载中
    - 已完结
    - 暂停更新
    x-enum-varnames:
    - BookStatusDraft
    - BookStatusPublished
    - BookStatusOngoing
    - BookStatusCompleted
    - BookStatusPaused
  bookstore.Chapter:
    properties:
      book_id:
        type: string
      chapter_num:
        type: integer
      content:
        type: string
      created_at:
        type: string
      id:
        type: string
      is_free:
        type: boolean
      price:
        type: number
      publish_time:
        type: string
      title:
        type: string
      updated_at:
        type: string
      word_count:
        type: integer
    type: object
  document.AutoSaveRequest:
    properties:
      content:
        type: string
      currentVersion:
        description: 客户端当前版本号
        type: integer
      documentId:
        type: string
      saveType:
        description: auto|manual
        type: string
    required:
    - content
    - documentId
    type: object
  document.AutoSaveResponse:
    properties:
      hasConflict:
        type: boolean
      newVersion:
        type: integer
      saved:
        type: boolean
      savedAt:
        type: string
      wordCount:
        type: integer
    type: object
  document.Collaborator:
    properties:
      acceptedAt:
        type: string
      invitedAt:
        type: string
      role:
        $ref: '#/definitions/document.CollaboratorRole'
      userId:
        type: string
    type: object
  document.CollaboratorRole:
    enum:
    - owner
    - editor
    - viewer
    type: string
    x-enum-comments:
      RoleEditor: 编辑者
      RoleOwner: 所有者
      RoleViewer: 查看者
    x-enum-descriptions:
    - 所有者
    - 编辑者
    - 查看者
    x-enum-varnames:
    - RoleOwner
    - RoleEditor
    - RoleViewer
  document.CreateDocumentRequest:
    properties:
      characterIds:
        items:
          type: string
        type: array
      locationIds:
        items:
          type: string
        type: array
      notes:
        type: string
      order:
        type: integer
      parentId:
        type: string
      projectId:
        type: string
      tags:
        items:
          type: string
        type: array
      timelineIds:
        items:
          type: string
        type: array
      title:
        maxLength: 200
        minLength: 1
        type: string
      type:
        type: string
    required:
    - projectId
    - title
    - type
    type: object
  document.CreateDocumentResponse:
    properties:
      createdAt:
        type: string
      documentId:
        type: string
      title:
        type: string
      type:
        type: string
    type: object
  document.Document:
    properties:
      characterIds:
        description: 关联信息
        items:
          type: string
        type: array
      createdAt:
        description: 时间戳
        type: string
      deletedAt:
        type: string
      id:
        type: string
      keyPoints:
        description: 关键点
        items:
          type: string
        type: array
      level:
        description: 层级深度（0-2）
        type: integer
      locationIds:
        description: 关联地点
        items:
          type: string
        type: array
      notes:
        type: string
      order:
        description: 同级排序
        type: integer
      parentId:
        description: 父文档ID，空表示根文档
        type: string
      plotThreads:
        description: 写作辅助（AI上下文需要）
        items:
          type: string
        type: array
      projectId:
        type: string
      status:
        description: planned | writing | completed
        type: string
      tags:
        description: 标签和备注
        items:
          type: string
        type: array
      timelineIds:
        description: 关联时间线
        items:
          type: string
        type: array
      title:
        maxLength: 200
        minLength: 1
        type: string
      type:
        $ref: '#/definitions/document.DocumentType'
      updatedAt:
        type: string
      wordCount:
        description: 统计信息（从DocumentContent同步）
        type: integer
      writingHints:
        description: 写作提示
        items:
          type: string
        type: array
    required:
    - projectId
    - title
    - type
    type: object
  document.DocumentContentResponse:
    properties:
      content:
        type: string
      documentId:
        type: string
      updatedAt:
        type: string
      version:
        type: integer
      wordCount:
        type: integer
    type: object
  document.DocumentTreeNode:
    properties:
      characterIds:
        description: 关联信息
        items:
          type: string
        type: array
      children:
        items:
          $ref: '#/definitions/document.DocumentTreeNode'
        type: array
      createdAt:
        description: 时间戳
        type: string
      deletedAt:
        type: string
      id:
        type: string
      keyPoints:
        description: 关键点
        items:
          type: string
        type: array
      level:
        description: 层级深度（0-2）
        type: integer
      locationIds:
        description: 关联地点
        items:
          type: string
        type: array
      notes:
        type: string
      order:
        description: 同级排序
        type: integer
      parentId:
        description: 父文档ID，空表示根文档
        type: string
      plotThreads:
        description: 写作辅助（AI上下文需要）
        items:
          type: string
        type: array
      projectId:
        type: string
      status:
        description: planned | writing | completed
        type: string
      tags:
        description: 标签和备注
        items:
          type: string
        type: array
      timelineIds:
        description: 关联时间线
        items:
          type: string
        type: array
      title:
        maxLength: 200
        minLength: 1
        type: string
      type:
        $ref: '#/definitions/document.DocumentType'
      updatedAt:
        type: string
      wordCount:
        description: 统计信息（从DocumentContent同步）
        type: integer
      writingHints:
        description: 写作提示
        items:
          type: string
        type: array
    required:
    - projectId
    - title
    - type
    type: object
  document.DocumentTreeResponse:
    properties:
      documents:
        items:
          $ref: '#/definitions/document.DocumentTreeNode'
        type: array
      projectId:
        type: string
    type: object
  document.DocumentType:
    enum:
    - volume
    - chapter
    - section
    - scene
    type: string
    x-enum-comments:
      TypeChapter: 章
      TypeScene: 场景
      TypeSection: 节
      TypeVolume: 卷
    x-enum-descriptions:
    - 卷
    - 章
    - 节
    - 场景
    x-enum-varnames:
    - TypeVolume
    - TypeChapter
    - TypeSection
    - TypeScene
  document.ListDocumentsResponse:
    properties:
      documents:
        items:
          $ref: '#/definitions/document.Document'
        type: array
      page:
        type: integer
      pageSize:
        type: integer
      total:
        type: integer
    type: object
  document.MoveDocumentRequest:
    properties:
      documentId:
        type: string
      newParentId:
        type: string
      order:
        type: integer
    required:
    - documentId
    type: object
  document.Project:
    properties:
      authorId:
        type: string
      category:
        type: string
      collaborators:
        description: 协作信息
        items:
          $ref: '#/definitions/document.Collaborator'
        type: array
      coverUrl:
        type: string
      createdAt:
        description: 时间戳
        type: string
      deletedAt:
        type: string
      id:
        type: string
      publishedAt:
        type: string
      settings:
        allOf:
        - $ref: '#/definitions/document.ProjectSettings'
        description: 设置信息
      statistics:
        allOf:
        - $ref: '#/definitions/document.ProjectStats'
        description: 统计信息
      status:
        $ref: '#/definitions/document.ProjectStatus'
      summary:
        type: string
      tags:
        items:
          type: string
        type: array
      title:
        maxLength: 100
        minLength: 1
        type: string
      updatedAt:
        type: string
      visibility:
        $ref: '#/definitions/document.Visibility'
    required:
    - authorId
    - title
    type: object
  document.ProjectSettings:
    properties:
      autoBackup:
        description: 自动备份
        type: boolean
      backupInterval:
        description: 备份间隔（小时）
        type: integer
      wordCountGoal:
        description: 字数目标
        type: integer
    type: object
  document.ProjectStats:
    properties:
      chapterCount:
        description: 章节数
        type: integer
      documentCount:
        description: 文档数
        type: integer
      lastUpdateAt:
        description: 最后更新时间
        type: string
      totalWords:
        description: 总字数
        type: integer
    type: object
  document.ProjectStatus:
    enum:
    - draft
    - serializing
    - completed
    - suspended
    - archived
    type: string
    x-enum-comments:
      StatusArchived: 已归档
      StatusCompleted: 已完结
      StatusDraft: 草稿
      StatusSerializing: 连载中
      StatusSuspended: 暂停
    x-enum-descriptions:
    - 草稿
    - 连载中
    - 已完结
    - 暂停
    - 已归档
    x-enum-varnames:
    - StatusDraft
    - StatusSerializing
    - StatusCompleted
    - StatusSuspended
    - StatusArchived
  document.ReorderDocumentsRequest:
    properties:
      orders:
        additionalProperties:
          type: integer
        description: documentID -> order
        type: object
      parentId:
        type: string
      projectId:
        type: string
    required:
    - orders
    - projectId
    type: object
  document.SaveStatusResponse:
    properties:
      currentVersion:
        type: integer
      documentId:
        type: string
      isSaving:
        type: boolean
      lastSavedAt:
        type: string
      wordCount:
        type: integer
    type: object
  document.Shortcut:
    properties:
      action:
        description: 操作名称
        type: string
      category:
        description: 分类
        type: string
      description:
        description: 描述
        type: string
      isCustom:
        description: 是否自定义
        type: boolean
      key:
        description: 按键组合 (e.g., "Ctrl+S")
        type: string
    type: object
  document.ShortcutCategory:
    properties:
      name:
        type: string
      shortcuts:
        items:
          $ref: '#/definitions/document.Shortcut'
        type: array
    type: object
  document.ShortcutConfig:
    properties:
      createdAt:
        type: string
      id:
        type: string
      shortcuts:
        additionalProperties:
          $ref: '#/definitions/document.Shortcut'
        description: 快捷键映射
        type: object
      updatedAt:
        type: string
      userId:
        description: 用户ID
        type: string
    type: object
  document.UpdateContentRequest:
    properties:
      content:
        type: string
      documentId:
        type: string
      version:
        description: 用于版本冲突检测
        type: integer
    required:
    - content
    - documentId
    type: object
  document.UpdateDocumentRequest:
    properties:
      characterIds:
        items:
          type: string
        type: array
      locationIds:
        items:
          type: string
        type: array
      notes:
        type: string
      status:
        type: string
      tags:
        items:
          type: string
        type: array
      timelineIds:
        items:
          type: string
        type: array
      title:
        type: string
    type: object
  document.Visibility:
    enum:
    - private
    - public
    type: string
    x-enum-comments:
      VisibilityPrivate: 私密
      VisibilityPublic: 公开
    x-enum-descriptions:
    - 私密
    - 公开
    x-enum-varnames:
    - VisibilityPrivate
    - VisibilityPublic
  document.WordCountResult:
    properties:
      chineseCount:
        description: 中文字数
        type: integer
      englishCount:
        description: 英文单词数
        type: integer
      numberCount:
        description: 数字个数
        type: integer
      paragraphCount:
        description: 段落数
        type: integer
      readingTime:
        description: 预计阅读时长（分钟）
        type: integer
      readingTimeText:
        description: 阅读时长文本
        type: string
      sentenceCount:
        description: 句子数
        type: integer
      totalCount:
        description: 总字数
        type: integer
    type: object
  project.ChangeItem:
    properties:
      content:
        type: string
      line:
        type: integer
      type:
        description: added, deleted, modified
        type: string
    type: object
  project.CreateProjectRequest:
    properties:
      category:
        type: string
      coverUrl:
        type: string
      summary:
        type: string
      tags:
        items:
          type: string
        type: array
      title:
        maxLength: 100
        minLength: 1
        type: string
    required:
    - title
    type: object
  project.CreateProjectResponse:
    properties:
      createdAt:
        type: string
      projectId:
        type: string
      status:
        type: string
      title:
        type: string
    type: object
  project.ListProjectsResponse:
    properties:
      page:
        type: integer
      pageSize:
        type: integer
      projects:
        items:
          $ref: '#/definitions/document.Project'
        type: array
      total:
        type: integer
    type: object
  project.UpdateProjectRequest:
    properties:
      category:
        type: string
      coverUrl:
        type: string
      status:
        type: string
      summary:
        type: string
      tags:
        items:
          type: string
        type: array
      title:
        type: string
    type: object
  project.VersionDetail:
    properties:
      content:
        type: string
      createdAt:
        type: string
      createdBy:
        type: string
      documentId:
        type: string
      message:
        type: string
      version:
        type: integer
      versionId:
        type: string
      wordCount:
        type: integer
    type: object
  project.VersionDiff:
    properties:
      addedLines:
        type: integer
      changes:
        items:
          $ref: '#/definitions/project.ChangeItem'
        type: array
      deletedLines:
        type: integer
      fromVersion:
        type: string
      toVersion:
        type: string
    type: object
  project.VersionHistoryResponse:
    properties:
      page:
        type: integer
      pageSize:
        type: integer
      total:
        type: integer
      versions:
        items:
          $ref: '#/definitions/project.VersionInfo'
        type: array
    type: object
  project.VersionInfo:
    properties:
      createdAt:
        type: string
      createdBy:
        type: string
      message:
        type: string
      version:
        type: integer
      versionId:
        type: string
      wordCount:
        type: integer
    type: object
  reader.Annotation:
    properties:
      bookId:
        description: 书籍ID
        type: string
      chapterId:
        description: 章节ID
        type: string
      createdAt:
        type: string
      id:
        type: string
      note:
        description: 注释
        type: string
      range:
        description: 标注范围：start-end
        type: string
      text:
        description: 标注文本
        type: string
      type:
        description: 标注类型 书签 | 划线
        type: string
      updatedAt:
        type: string
      userId:
        description: 用户ID
        type: string
    type: object
  reader.BatchCreateAnnotationsRequest:
    properties:
      annotations:
        items:
          $ref: '#/definitions/reader.CreateAnnotationRequest'
        maxItems: 50
        minItems: 1
        type: array
    required:
    - annotations
    type: object
  reader.BatchDeleteAnnotationsRequest:
    properties:
      ids:
        items:
          type: string
        maxItems: 100
        minItems: 1
        type: array
    required:
    - ids
    type: object
  reader.BatchUpdateAnnotationsRequest:
    properties:
      updates:
        items:
          properties:
            id:
              type: string
            updates:
              $ref: '#/definitions/reader.UpdateAnnotationRequest'
          required:
          - id
          type: object
        maxItems: 50
        minItems: 1
        type: array
    required:
    - updates
    type: object
  reader.CreateAnnotationRequest:
    properties:
      bookId:
        type: string
      chapterId:
        type: string
      note:
        description: 注释内容
        type: string
      range:
        description: 标注范围：start-end
        type: string
      text:
        description: 标注文本
        type: string
      type:
        description: bookmark(书签) | highlight(高亮) | note(笔记)
        type: string
    required:
    - bookId
    - chapterId
    - type
    type: object
  reader.ReadingSettings:
    properties:
      autoScroll:
        description: 自动滚动
        type: boolean
      background:
        description: 背景色
        type: string
      createdAt:
        type: string
      fontFamily:
        description: 字体
        type: string
      fontSize:
        description: 字号
        type: integer
      id:
        type: string
      lineHeight:
        description: 行高
        type: number
      pageMode:
        description: 翻页模式：1-滑动，2-仿真
        type: integer
      scrollSpeed:
        description: 滚动速度
        type: integer
      theme:
        description: 主题
        type: string
      updatedAt:
        type: string
      userId:
        description: 用户ID
        type: string
    type: object
  reader.SaveProgressRequest:
    properties:
      bookId:
        type: string
      chapterId:
        type: string
      progress:
        maximum: 1
        minimum: 0
        type: number
    required:
    - bookId
    - chapterId
    - progress
    type: object
  reader.SyncAnnotationsRequest:
    properties:
      bookId:
        type: string
      lastSyncTime:
        description: Unix时间戳
        type: integer
      localAnnotations:
        items:
          $ref: '#/definitions/reader.Annotation'
        type: array
    required:
    - bookId
    type: object
  reader.UpdateAnnotationRequest:
    properties:
      note:
        description: 注释内容
        type: string
      range:
        description: 标注范围
        type: string
      text:
        description: 标注文本
        type: string
    type: object
  reader.UpdateReadingTimeRequest:
    properties:
      bookId:
        type: string
      duration:
        minimum: 1
        type: integer
    required:
    - bookId
    - duration
    type: object
  reader.UpdateSettingsRequest:
    properties:
      autoSave:
        type: boolean
      backgroundColor:
        type: string
      fontFamily:
        type: string
      fontSize:
        type: integer
      lineHeight:
        type: number
      pageMode:
        description: scroll, paginate
        type: string
      showProgress:
        type: boolean
      textColor:
        type: string
    type: object
  reading.APIResponse:
    properties:
      code:
        type: integer
      data: {}
      message:
        type: string
    type: object
  shared.APIResponse:
    properties:
      code:
        type: integer
      data: {}
      message:
        type: string
      request_id:
        description: 请求ID（用于追踪）
        type: string
      timestamp:
        description: 响应时间戳
        type: integer
    type: object
  shared.ConsumeRequest:
    properties:
      amount:
        type: number
      reason:
        maxLength: 200
        minLength: 1
        type: string
    required:
    - amount
    - reason
    type: object
  shared.ErrorResponse:
    properties:
      code:
        type: integer
      debug:
        description: 调试信息，仅开发环境使用
        type: string
      error:
        type: string
      message:
        type: string
      request_id:
        type: string
      timestamp:
        type: integer
    type: object
  shared.PaginatedResponse:
    properties:
      code:
        type: integer
      data: {}
      message:
        type: string
      pagination:
        allOf:
        - $ref: '#/definitions/shared.Pagination'
        description: 分页信息
      request_id:
        type: string
      timestamp:
        type: integer
    type: object
  shared.Pagination:
    properties:
      has_next:
        description: 是否有下一页
        type: boolean
      has_previous:
        description: 是否有上一页
        type: boolean
      page:
        description: 当前页码
        type: integer
      page_size:
        description: 每页大小
        type: integer
      total:
        description: 总记录数
        type: integer
      total_pages:
        description: 总页数
        type: integer
    type: object
  shared.RechargeRequest:
    properties:
      amount:
        type: number
      method:
        enum:
        - alipay
        - wechat
        - bank
        type: string
    required:
    - amount
    - method
    type: object
  shared.ReviewContentRequest:
    properties:
      action:
        enum:
        - approve
        - reject
        type: string
      content_id:
        minLength: 1
        type: string
      content_type:
        type: string
      reason:
        maxLength: 500
        type: string
    required:
    - action
    - content_id
    - content_type
    type: object
  shared.ReviewWithdrawRequest:
    properties:
      approved:
        type: boolean
      reason:
        type: string
      withdraw_id:
        type: string
    required:
    - withdraw_id
    type: object
  shared.TransferRequest:
    properties:
      amount:
        type: number
      reason:
        maxLength: 200
        type: string
      to_user_id:
        minLength: 1
        type: string
    required:
    - amount
    - to_user_id
    type: object
  shared.WithdrawRequest:
    properties:
      account:
        type: string
      amount:
        type: number
    required:
    - account
    - amount
    type: object
  stats.BookStats:
    properties:
      author_id:
        type: string
      avg_chapter_views:
        description: 平均章节阅读量
        type: number
      avg_completion_rate:
        description: 平均完读率
        type: number
      avg_drop_off_rate:
        description: 平均跳出率
        type: number
      avg_reading_duration:
        description: 平均阅读时长(秒)
        type: number
      avg_revenue_per_user:
        description: 平均用户贡献
        type: number
      avg_subscribe_rate:
        description: 平均订阅率
        type: number
      book_id:
        description: 作品ID
        type: string
      chapter_revenue:
        description: 章节收入
        type: number
      created_at:
        type: string
      day1_retention:
        description: 留存数据
        type: number
      day7_retention:
        description: 7日留存
        type: number
      day30_retention:
        description: 30日留存
        type: number
      drop_off_chapter:
        description: 最高跳出章节
        type: string
      id:
        type: string
      revenue_trend:
        description: 收入趋势
        type: string
      reward_revenue:
        description: 打赏收入
        type: number
      stat_date:
        description: 时间戳
        type: string
      subscribe_revenue:
        description: 订阅收入
        type: number
      title:
        description: 基础信息
        type: string
      total_bookmarks:
        description: 总书签数
        type: integer
      total_chapter:
        description: 总章节数
        type: integer
      total_comments:
        description: 互动数据
        type: integer
      total_drop_offs:
        description: 跳出数据
        type: integer
      total_likes:
        description: 总点赞数
        type: integer
      total_revenue:
        description: 收入数据
        type: number
      total_shares:
        description: 总分享数
        type: integer
      total_subscribers:
        description: 订阅数据
        type: integer
      total_views:
        description: 阅读数据
        type: integer
      total_words:
        description: 总字数
        type: integer
      unique_readers:
        description: 独立读者数
        type: integer
      updated_at:
        type: string
      view_trend:
        description: 趋势数据
        type: string
    type: object
  stats.BookStatsDaily:
    properties:
      book_id:
        type: string
      created_at:
        type: string
      daily_new_readers:
        description: 当日新增读者
        type: integer
      daily_revenue:
        description: 当日收入
        type: number
      daily_subscribers:
        description: 当日订阅数
        type: integer
      daily_views:
        description: 当日阅读量
        type: integer
      date:
        description: 统计日期
        type: string
      id:
        type: string
      updated_at:
        type: string
    type: object
  stats.ChapterStats:
    properties:
      avg_read_time:
        description: 平均阅读时长(秒)
        type: number
      book_id:
        description: 作品ID
        type: string
      bookmark_count:
        description: 书签数
        type: integer
      chapter_id:
        description: 章节ID
        type: string
      comment_count:
        description: 互动数据
        type: integer
      completion_rate:
        description: 完读率(0-1)
        type: number
      created_at:
        type: string
      drop_off_count:
        description: 跳出数据
        type: integer
      drop_off_rate:
        description: 跳出率(0-1)
        type: number
      id:
        type: string
      like_count:
        description: 点赞数
        type: integer
      revenue:
        description: 收入（元）
        type: number
      stat_date:
        description: 时间戳
        type: string
      subscribe_count:
        description: 订阅数据（付费章节）
        type: integer
      title:
        description: 章节标题
        type: string
      unique_viewers:
        description: 独立读者数
        type: integer
      updated_at:
        type: string
      view_count:
        description: 阅读数据
        type: integer
      word_count:
        description: 字数
        type: integer
    type: object
  stats.ChapterStatsAggregate:
    properties:
      chapter_id:
        type: string
      completion_rate:
        type: number
      drop_off_rate:
        type: number
      revenue:
        type: number
      title:
        type: string
      unique_viewers:
        type: integer
      view_count:
        type: integer
    type: object
  stats.HeatmapPoint:
    properties:
      chapter_id:
        description: 章节ID
        type: string
      chapter_num:
        description: 章节序号
        type: integer
      completion_rate:
        description: 完读率
        type: number
      drop_off_rate:
        description: 跳出率
        type: number
      heat_score:
        description: 热度分数(0-100)
        type: number
      view_count:
        description: 阅读量
        type: integer
    type: object
  stats.ReaderBehavior:
    properties:
      behavior_type:
        description: 行为类型
        type: string
      book_id:
        description: 作品ID
        type: string
      chapter_id:
        description: 章节ID
        type: string
      client_ip:
        description: IP地址
        type: string
      created_at:
        type: string
      device_type:
        description: 设备信息
        type: string
      end_position:
        description: 结束位置(字符数)
        type: integer
      id:
        type: string
      progress:
        description: 阅读进度(0-1)
        type: number
      read_at:
        description: 阅读时间
        type: string
      read_duration:
        description: 时间数据
        type: integer
      referrer:
        description: 引荐页面
        type: string
      source:
        description: 来源信息
        type: string
      start_position:
        description: 阅读进度
        type: integer
      user_id:
        description: 用户ID
        type: string
    type: object
  stats.RevenueBreakdown:
    properties:
      ad_revenue:
        description: 广告收入
        type: number
      book_id:
        type: string
      chapter_revenue:
        description: 章节付费
        type: number
      end_date:
        type: string
      reward_revenue:
        description: 打赏收入
        type: number
      start_date:
        type: string
      subscribe_revenue:
        description: 订阅收入
        type: number
      total_revenue:
        type: number
    type: object
  stats.TopChapters:
    properties:
      book_id:
        type: string
      highest_drop_off:
        description: 跳出率最高
        items:
          $ref: '#/definitions/stats.ChapterStatsAggregate'
        type: array
      highest_revenue:
        description: 收入最高
        items:
          $ref: '#/definitions/stats.ChapterStatsAggregate'
        type: array
      lowest_completion:
        description: 完读率最低
        items:
          $ref: '#/definitions/stats.ChapterStatsAggregate'
        type: array
      most_viewed:
        description: 阅读量最高
        items:
          $ref: '#/definitions/stats.ChapterStatsAggregate'
        type: array
    type: object
  system.AdminUpdateUserRequest:
    properties:
      avatar:
        type: string
      bio:
        maxLength: 500
        type: string
      email_verified:
        type: boolean
      nickname:
        maxLength: 50
        type: string
      phone:
        type: string
      phone_verified:
        type: boolean
      role:
        enum:
        - user
        - author
        - admin
        type: string
      status:
        description: usersModel.UserStatus
        type: string
    type: object
  system.ChangePasswordRequest:
    properties:
      new_password:
        minLength: 6
        type: string
      old_password:
        type: string
    required:
    - new_password
    - old_password
    type: object
  system.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  system.LoginResponse:
    properties:
      email:
        type: string
      token:
        type: string
      user_id:
        type: string
      username:
        type: string
    type: object
  system.RegisterRequest:
    properties:
      email:
        type: string
      password:
        minLength: 6
        type: string
      username:
        maxLength: 50
        minLength: 3
        type: string
    required:
    - email
    - password
    - username
    type: object
  system.RegisterResponse:
    properties:
      email:
        type: string
      role:
        type: string
      status:
        type: string
      token:
        type: string
      user_id:
        type: string
      username:
        type: string
    type: object
  system.UpdateProfileRequest:
    properties:
      avatar:
        type: string
      bio:
        maxLength: 500
        type: string
      nickname:
        maxLength: 50
        type: string
      phone:
        type: string
    type: object
  system.UserProfileResponse:
    properties:
      avatar:
        type: string
      bio:
        type: string
      created_at:
        type: string
      email:
        type: string
      email_verified:
        type: boolean
      last_login_at:
        type: string
      last_login_ip:
        type: string
      nickname:
        type: string
      phone:
        type: string
      phone_verified:
        type: boolean
      role:
        type: string
      status:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
      username:
        type: string
    type: object
  writer.AuditDocumentRequest:
    properties:
      content:
        type: string
      documentId:
        type: string
    required:
    - content
    - documentId
    type: object
  writer.CheckContentRequest:
    properties:
      content:
        maxLength: 100000
        minLength: 1
        type: string
    required:
    - content
    type: object
  writer.ReviewAppealRequest:
    properties:
      approved:
        type: boolean
      note:
        maxLength: 500
        type: string
    type: object
  writer.ReviewAuditRequest:
    properties:
      approved:
        type: boolean
      note:
        maxLength: 500
        type: string
    type: object
  writer.SubmitAppealRequest:
    properties:
      reason:
        maxLength: 500
        minLength: 10
        type: string
    required:
    - reason
    type: object
  writer.UpdateShortcutsRequest:
    type: object
  writer.WordCountRequest:
    properties:
      content:
        type: string
      filterMarkdown:
        description: 是否过滤Markdown语法
        type: boolean
    required:
    - content
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: 青羽写作平台后端服务API文档，提供AI辅助写作、阅读社区、书城管理等核心功能。
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: 青羽写作平台 API
  version: "1.0"
paths:
  /api/v1/admin/audit/{id}/appeal/review:
    post:
      consumes:
      - application/json
      description: 人工复核申诉（管理员接口）
      parameters:
      - description: 审核记录ID
        in: path
        name: id
        required: true
        type: string
      - description: 复核申诉请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/writer.ReviewAppealRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
      summary: 复核申诉
      tags:
      - 审核-管理
  /api/v1/admin/audit/{id}/review:
    post:
      consumes:
      - application/json
      description: 人工复核审核结果（管理员接口）
      parameters:
      - description: 审核记录ID
        in: path
        name: id
        required: true
        type: string
      - description: 复核请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/writer.ReviewAuditRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
      summary: 复核审核结果
      tags:
      - 审核-管理
  /api/v1/admin/audit/high-risk:
    get:
      consumes:
      - application/json
      description: 获取高风险审核记录（管理员接口）
      parameters:
      - default: 3
        description: 最低风险等级
        in: query
        name: minRiskLevel
        type: integer
      - default: 50
        description: 数量限制
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
      summary: 获取高风险审核记录
      tags:
      - 审核-管理
  /api/v1/admin/audit/pending:
    get:
      consumes:
      - application/json
      description: 获取需要人工复核的审核记录（管理员接口）
      parameters:
      - default: 50
        description: 数量限制
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
      summary: 获取待复核列表
      tags:
      - 审核-管理
  /api/v1/admin/users:
    get:
      consumes:
      - application/json
      description: 管理员获取用户列表（支持分页和筛选）
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: page_size
        type: integer
      - description: 用户名筛选
        in: query
        name: username
        type: string
      - description: 邮箱筛选
        in: query
        name: email
        type: string
      - description: 角色筛选
        in: query
        name: role
        type: string
      - description: 状态筛选
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.PaginatedResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/shared.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: 获取用户列表
      tags:
      - 用户-管理
  /api/v1/admin/users/{id}:
    delete:
      consumes:
      - application/json
      description: 管理员删除指定用户
      parameters:
      - description: 用户ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/shared.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/shared.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: 删除用户
      tags:
      - 用户-管理
    get:
      consumes:
      - application/json
      description: 管理员获取指定用户的详细信息
      parameters:
      - description: 用户ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/shared.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/system.UserProfileResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/shared.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/shared.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: 获取指定用户信息
      tags:
      - 用户-管理
    put:
      consumes:
      - application/json
      description: 管理员更新指定用户的信息
      parameters:
      - description: 用户ID
        in: path
        name: id
        required: true
        type: string
      - description: 更新信息
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/system.AdminUpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/shared.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/shared.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: 更新指定用户信息
      tags:
      - 用户-管理
  /api/v1/audit/{id}/appeal:
    post:
      consumes:
      - application/json
      description: 对审核结果提交申诉
      parameters:
      - description: 审核记录ID
        in: path
        name: id
        required: true
        type: string
      - description: 申诉请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/writer.SubmitAppealRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.APIResponse'
      summary: 提交申诉
      tags:
      - 审核
  /api/v1/audit/check:
    post:
      consumes:
      - application/json
      description: 快速检测内容是否包含违规信息（不创建审核记录）
      parameters:
      - description: 检测请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/writer.CheckContentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.APIResponse'
      summary: 实时检测内容
      tags:
      - 审核
  /api/v1/books:
    post:
      consumes:
      - application/json
      description: 创建新的书籍详情信息
      parameters:
      - description: 书籍详情信息
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/bookstore.BookDetail'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/reading.APIResponse'
      summary: 创建书籍详情
      tags:
      - 书籍详情
  /api/v1/books/{book_id}/chapters:
    get:
      consumes:
      - application/json
      description: 根据书籍ID获取所有章节
      parameters:
      - description: 书籍ID
        in: path
        name: book_id
        required: true
        type: string
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 20
        description: 每页数量
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/reading.APIResponse'
      summary: 根据书籍ID获取章节列表
      tags:
      - 章节
  /api/v1/books/{book_id}/chapters/{chapter_num}:
    get:
      consumes:
      - application/json
      description: 根据书籍ID和章节号获取特定章节
      parameters:
      - description: 书籍ID
        in: path
        name: book_id
        required: true
        type: string
      - description: 章节号
        in: path
        name: chapter_num
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/reading.APIResponse'
      summary: 根据书籍ID和章节号获取章节
      tags:
      - 章节
  /api/v1/books/{book_id}/chapters/first:
    get:
      consumes:
      - application/json
      description: 根据书籍ID获取第一章节
      parameters:
      - description: 书籍ID
        in: path
        name: book_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/reading.APIResponse'
      summary: 获取第一章节
      tags:
      - 章节
  /api/v1/books/{book_id}/chapters/free:
    get:
      consumes:
      - application/json
      description: 根据书籍ID获取免费章节列表
      parameters:
      - description: 书籍ID
        in: path
        name: book_id
        required: true
        type: string
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 20
        description: 每页数量
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/reading.APIResponse'
      summary: 获取免费章节
      tags:
      - 章节
  /api/v1/books/{book_id}/chapters/last:
    get:
      consumes:
      - application/json
      description: 根据书籍ID获取最后章节
      parameters:
      - description: 书籍ID
        in: path
        name: book_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/reading.APIResponse'
      summary: 获取最后章节
      tags:
      - 章节
  /api/v1/books/{book_id}/chapters/paid:
    get:
      consumes:
      - application/json
      description: 根据书籍ID获取付费章节列表
      parameters:
      - description: 书籍ID
        in: path
        name: book_id
        required: true
        type: string
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 20
        description: 每页数量
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/reading.APIResponse'
      summary: 获取付费章节
      tags:
      - 章节
  /api/v1/books/{book_id}/chapters/published:
    get:
      consumes:
      - application/json
      description: 根据书籍ID获取已发布章节列表
      parameters:
      - description: 书籍ID
        in: path
        name: book_id
        required: true
        type: string
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 20
        description: 每页数量
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/reading.APIResponse'
      summary: 获取已发布章节
      tags:
      - 章节
  /api/v1/books/{book_id}/chapters/statistics:
    get:
      consumes:
      - application/json
      description: 获取书籍的章节统计信息
      parameters:
      - description: 书籍ID
        in: path
        name: book_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/reading.APIResponse'
      summary: 获取章节统计信息
      tags:
      - 章节
  /api/v1/books/{id}:
    delete:
      consumes:
      - application/json
      description: 删除书籍详情信息
      parameters:
      - description: 书籍ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/reading.APIResponse'
      summary: 删除书籍详情
      tags:
      - 书籍详情
    get:
      consumes:
      - application/json
      description: 根据书籍ID获取详细信息
      parameters:
      - description: 书籍ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/reading.APIResponse'
      summary: 获取书籍详情
      tags:
      - 书籍详情
    put:
      consumes:
      - application/json
      description: 更新书籍详情信息
      parameters:
      - description: 书籍ID
        in: path
        name: id
        required: true
        type: string
      - description: 书籍详情信息
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/bookstore.BookDetail'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/reading.APIResponse'
      summary: 更新书籍详情
      tags:
      - 书籍详情
  /api/v1/books/{id}/like:
    post:
      consumes:
      - application/json
      description: 用户点赞书籍，增加点赞数统计
      parameters:
      - description: 书籍ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/reading.APIResponse'
      summary: 增加书籍点赞数
      tags:
      - 书籍详情
  /api/v1/books/{id}/similar:
    get:
      consumes:
      - application/json
      description: 根据书籍ID获取相似书籍
      parameters:
      - description: 书籍ID
        in: path
        name: id
        required: true
        type: string
      - default: 10
        description: 数量限制
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/reading.APIResponse'
      summary: 获取相似书籍
      tags:
      - 书籍详情
  /api/v1/books/{id}/statistics:
    get:
      consumes:
      - application/json
      description: 获取书籍的浏览量、收藏量等统计信息
      parameters:
      - description: 书籍ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/reading.APIResponse'
      summary: 获取书籍统计信息
      tags:
      - 书籍详情
  /api/v1/books/{id}/unlike:
    post:
      consumes:
      - application/json
      description: 用户取消点赞书籍，减少点赞数统计
      parameters:
      - description: 书籍ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/reading.APIResponse'
      summary: 减少书籍点赞数
      tags:
      - 书籍详情
  /api/v1/books/{id}/view:
    post:
      consumes:
      - application/json
      description: 记录用户浏览书籍详情，增加浏览量统计
      parameters:
      - description: 书籍ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/reading.APIResponse'
      summary: 增加书籍浏览量
      tags:
      - 书籍详情
  /api/v1/books/category:
    get:
      consumes:
      - application/json
      description: 根据分类获取书籍列表
      parameters:
      - description: 分类名称
        in: query
        name: category
        required: true
        type: string
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 20
        description: 每页数量
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/reading.APIResponse'
      summary: 根据分类获取书籍
      tags:
      - 书籍详情
  /api/v1/books/latest:
    get:
      consumes:
      - application/json
      description: 获取最新发布的书籍列表
      parameters:
      - default: 10
        description: 数量限制
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/reading.APIResponse'
      summary: 获取最新书籍
      tags:
      - 书籍详情
  /api/v1/books/popular:
    get:
      consumes:
      - application/json
      description: 获取热门书籍列表
      parameters:
      - default: 10
        description: 数量限制
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/reading.APIResponse'
      summary: 获取热门书籍
      tags:
      - 书籍详情
  /api/v1/books/recommended:
    get:
      consumes:
      - application/json
      description: 获取推荐书籍列表
      parameters:
      - default: 10
        description: 数量限制
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/reading.APIResponse'
      summary: 获取推荐书籍
      tags:
      - 书籍详情
  /api/v1/books/search:
    get:
      consumes:
      - application/json
      description: 根据关键词搜索书籍
      parameters:
      - description: 搜索关键词
        in: query
        name: keyword
        required: true
        type: string
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 20
        description: 每页数量
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/reading.APIResponse'
      summary: 搜索书籍
      tags:
      - 书籍详情
  /api/v1/books/search/author:
    get:
      consumes:
      - application/json
      description: 根据作者名称搜索书籍
      parameters:
      - description: 作者名称
        in: query
        name: author
        required: true
        type: string
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 20
        description: 每页数量
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/reading.APIResponse'
      summary: 根据作者搜索书籍
      tags:
      - 书籍详情
  /api/v1/books/search/title:
    get:
      consumes:
      - application/json
      description: 根据书籍标题进行模糊搜索
      parameters:
      - description: 书籍标题
        in: query
        name: title
        required: true
        type: string
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 20
        description: 每页数量
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/reading.APIResponse'
      summary: 根据标题搜索书籍
      tags:
      - 书籍详情
  /api/v1/books/status:
    get:
      consumes:
      - application/json
      description: 根据书籍状态获取书籍列表
      parameters:
      - description: 书籍状态(serializing/completed/paused)
        in: query
        name: status
        required: true
        type: string
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 20
        description: 每页数量
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/reading.APIResponse'
      summary: 根据状态获取书籍
      tags:
      - 书籍详情
  /api/v1/books/tags:
    get:
      consumes:
      - application/json
      description: 根据标签获取书籍列表
      parameters:
      - description: 标签列表(逗号分隔)
        in: query
        name: tags
        required: true
        type: string
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 20
        description: 每页数量
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/reading.APIResponse'
      summary: 根据标签获取书籍
      tags:
      - 书籍详情
  /api/v1/bookstore/banners:
    get:
      consumes:
      - application/json
      description: 获取当前激活的Banner列表
      parameters:
      - default: 5
        description: 数量限制
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/reading.APIResponse'
      summary: 获取激活的Banner列表
      tags:
      - Banner
  /api/v1/bookstore/banners/{id}/click:
    post:
      consumes:
      - application/json
      description: 记录用户点击Banner，增加点击次数统计
      parameters:
      - description: Banner ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/reading.APIResponse'
      summary: 增加Banner点击次数
      tags:
      - Banner
  /api/v1/bookstore/books/{id}:
    get:
      consumes:
      - application/json
      description: 根据书籍ID获取书籍的详细信息
      parameters:
      - description: 书籍ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/reading.APIResponse'
      summary: 获取书籍详情
      tags:
      - 书籍
  /api/v1/bookstore/books/{id}/view:
    post:
      consumes:
      - application/json
      description: 记录用户浏览书籍，增加浏览量统计
      parameters:
      - description: 书籍ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/reading.APIResponse'
      summary: 增加书籍浏览量
      tags:
      - 书籍
  /api/v1/bookstore/books/featured:
    get:
      consumes:
      - application/json
      description: 获取精选书籍列表，支持分页
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 20
        description: 每页数量
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/reading.APIResponse'
      summary: 获取精选书籍
      tags:
      - 书籍
  /api/v1/bookstore/books/recommended:
    get:
      consumes:
      - application/json
      description: 获取推荐书籍列表，支持分页
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 20
        description: 每页数量
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/reading.APIResponse'
      summary: 获取推荐书籍
      tags:
      - 书籍
  /api/v1/bookstore/books/search:
    get:
      consumes:
      - application/json
      description: 根据关键词和过滤条件搜索书籍
      parameters:
      - description: 搜索关键词
        in: query
        name: keyword
        type: string
      - description: 分类ID
        in: query
        name: categoryId
        type: string
      - description: 作者
        in: query
        name: author
        type: string
      - description: 最低评分
        in: query
        name: minRating
        type: number
      - collectionFormat: csv
        description: 标签
        in: query
        items:
          type: string
        name: tags
        type: array
      - description: 排序字段
        enum:
        - created_at
        - updated_at
        - view_count
        - like_count
        - rating
        in: query
        name: sortBy
        type: string
      - description: 排序方向
        enum:
        - asc
        - desc
        in: query
        name: sortOrder
        type: string
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 20
        description: 每页数量
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/reading.APIResponse'
      summary: 搜索书籍
      tags:
      - 书籍
  /api/v1/bookstore/categories/{categoryId}/books:
    get:
      consumes:
      - application/json
      description: 根据分类ID获取该分类下的书籍列表，支持分页
      parameters:
      - description: 分类ID
        in: path
        name: categoryId
        required: true
        type: string
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 20
        description: 每页数量
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/reading.APIResponse'
      summary: 根据分类获取书籍列表
      tags:
      - 书籍
  /api/v1/bookstore/categories/{id}:
    get:
      consumes:
      - application/json
      description: 根据分类ID获取分类的详细信息
      parameters:
      - description: 分类ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/reading.APIResponse'
      summary: 获取分类详情
      tags:
      - 分类
  /api/v1/bookstore/categories/tree:
    get:
      consumes:
      - application/json
      description: 获取完整的分类树结构
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/reading.APIResponse'
      summary: 获取分类树
      tags:
      - 分类
  /api/v1/bookstore/homepage:
    get:
      consumes:
      - application/json
      description: 获取书城首页的Banner、推荐书籍、精选书籍、分类等数据
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/reading.APIResponse'
      summary: 获取书城首页数据
      tags:
      - 书城
  /api/v1/bookstore/rankings/{type}:
    get:
      consumes:
      - application/json
      description: 根据榜单类型获取指定周期的榜单数据
      parameters:
      - description: 榜单类型
        enum:
        - realtime
        - weekly
        - monthly
        - newbie
        in: path
        name: type
        required: true
        type: string
      - description: 周期
        in: query
        name: period
        type: string
      - default: 20
        description: 限制数量
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/reading.APIResponse'
      summary: 根据类型获取榜单
      tags:
      - 榜单
  /api/v1/bookstore/rankings/monthly:
    get:
      consumes:
      - application/json
      description: 获取指定月份的月榜单数据
      parameters:
      - description: '月份 (格式: 2024-01)'
        in: query
        name: period
        type: string
      - default: 20
        description: 限制数量
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/reading.APIResponse'
      summary: 获取月榜单
      tags:
      - 榜单
  /api/v1/bookstore/rankings/newbie:
    get:
      consumes:
      - application/json
      description: 获取指定月份的新人榜单数据
      parameters:
      - description: '月份 (格式: 2024-01)'
        in: query
        name: period
        type: string
      - default: 20
        description: 限制数量
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/reading.APIResponse'
      summary: 获取新人榜单
      tags:
      - 榜单
  /api/v1/bookstore/rankings/realtime:
    get:
      consumes:
      - application/json
      description: 获取当日实时榜单数据
      parameters:
      - default: 20
        description: 限制数量
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/reading.APIResponse'
      summary: 获取实时榜单
      tags:
      - 榜单
  /api/v1/bookstore/rankings/weekly:
    get:
      consumes:
      - application/json
      description: 获取指定周期的周榜单数据
      parameters:
      - description: '周期 (格式: 2024-W01)'
        in: query
        name: period
        type: string
      - default: 20
        description: 限制数量
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/reading.APIResponse'
      summary: 获取周榜单
      tags:
      - 榜单
  /api/v1/chapters:
    post:
      consumes:
      - application/json
      description: 创建新的章节
      parameters:
      - description: 章节信息
        in: body
        name: chapter
        required: true
        schema:
          $ref: '#/definitions/bookstore.Chapter'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/reading.APIResponse'
      summary: 创建章节
      tags:
      - 章节
  /api/v1/chapters/{id}:
    delete:
      consumes:
      - application/json
      description: 删除章节
      parameters:
      - description: 章节ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/reading.APIResponse'
      summary: 删除章节
      tags:
      - 章节
    get:
      consumes:
      - application/json
      description: 根据章节ID获取章节详细信息
      parameters:
      - description: 章节ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/reading.APIResponse'
      summary: 获取章节详情
      tags:
      - 章节
    put:
      consumes:
      - application/json
      description: 更新章节信息
      parameters:
      - description: 章节ID
        in: path
        name: id
        required: true
        type: string
      - description: 章节信息
        in: body
        name: chapter
        required: true
        schema:
          $ref: '#/definitions/bookstore.Chapter'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/reading.APIResponse'
      summary: 更新章节
      tags:
      - 章节
  /api/v1/chapters/{id}/content:
    get:
      consumes:
      - application/json
      description: 根据章节ID获取章节内容
      parameters:
      - description: 章节ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/reading.APIResponse'
      summary: 获取章节内容
      tags:
      - 章节
  /api/v1/chapters/{id}/next:
    get:
      consumes:
      - application/json
      description: 根据当前章节ID获取下一章节
      parameters:
      - description: 当前章节ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/reading.APIResponse'
      summary: 获取下一章节
      tags:
      - 章节
  /api/v1/chapters/{id}/previous:
    get:
      consumes:
      - application/json
      description: 根据当前章节ID获取上一章节
      parameters:
      - description: 当前章节ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/reading.APIResponse'
      summary: 获取上一章节
      tags:
      - 章节
  /api/v1/chapters/search:
    get:
      consumes:
      - application/json
      description: 根据关键词搜索章节
      parameters:
      - description: 搜索关键词
        in: query
        name: keyword
        required: true
        type: string
      - description: 书籍ID(可选)
        in: query
        name: book_id
        type: string
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 20
        description: 每页数量
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/reading.APIResponse'
      summary: 搜索章节
      tags:
      - 章节
  /api/v1/documents/{documentId}/versions:
    get:
      consumes:
      - application/json
      description: 获取文档的版本历史列表
      parameters:
      - description: 文档ID
        in: path
        name: documentId
        required: true
        type: string
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 20
        description: 每页数量
        in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/shared.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/project.VersionHistoryResponse'
              type: object
      summary: 获取版本历史
      tags:
      - 版本控制
  /api/v1/documents/{documentId}/versions/{versionId}:
    get:
      consumes:
      - application/json
      description: 获取文档的特定版本内容
      parameters:
      - description: 文档ID
        in: path
        name: documentId
        required: true
        type: string
      - description: 版本ID
        in: path
        name: versionId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/shared.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/project.VersionDetail'
              type: object
      summary: 获取特定版本
      tags:
      - 版本控制
  /api/v1/documents/{documentId}/versions/{versionId}/restore:
    post:
      consumes:
      - application/json
      description: 将文档恢复到特定版本
      parameters:
      - description: 文档ID
        in: path
        name: documentId
        required: true
        type: string
      - description: 版本ID
        in: path
        name: versionId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
      summary: 恢复版本
      tags:
      - 版本控制
  /api/v1/documents/{documentId}/versions/compare:
    get:
      consumes:
      - application/json
      description: 比较两个版本的差异
      parameters:
      - description: 文档ID
        in: path
        name: documentId
        required: true
        type: string
      - description: 源版本ID
        in: query
        name: fromVersion
        required: true
        type: string
      - description: 目标版本ID
        in: query
        name: toVersion
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/shared.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/project.VersionDiff'
              type: object
      summary: 比较版本
      tags:
      - 版本控制
  /api/v1/documents/{id}:
    delete:
      consumes:
      - application/json
      description: 删除文档（软删除）
      parameters:
      - description: 文档ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
      summary: 删除文档
      tags:
      - 文档管理
    get:
      consumes:
      - application/json
      description: 根据ID获取文档详细信息
      parameters:
      - description: 文档ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/shared.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/document.Document'
              type: object
      summary: 获取文档详情
      tags:
      - 文档管理
    put:
      consumes:
      - application/json
      description: 更新文档信息
      parameters:
      - description: 文档ID
        in: path
        name: id
        required: true
        type: string
      - description: 更新文档请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/document.UpdateDocumentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
      summary: 更新文档
      tags:
      - 文档管理
  /api/v1/documents/{id}/audit:
    post:
      consumes:
      - application/json
      description: 对文档进行全文审核并创建审核记录
      parameters:
      - description: 文档ID
        in: path
        name: id
        required: true
        type: string
      - description: 审核请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/writer.AuditDocumentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.APIResponse'
      summary: 全文审核文档
      tags:
      - 审核
  /api/v1/documents/{id}/audit-result:
    get:
      consumes:
      - application/json
      description: 根据文档ID获取审核结果
      parameters:
      - description: 文档ID
        in: path
        name: id
        required: true
        type: string
      - default: document
        description: 目标类型
        in: query
        name: targetType
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/shared.APIResponse'
      summary: 获取审核结果
      tags:
      - 审核
  /api/v1/documents/{id}/autosave:
    post:
      consumes:
      - application/json
      description: 自动保存文档内容（支持版本冲突检测）
      parameters:
      - description: 文档ID
        in: path
        name: id
        required: true
        type: string
      - description: 自动保存请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/document.AutoSaveRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/shared.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/document.AutoSaveResponse'
              type: object
        "409":
          description: 版本冲突
          schema:
            $ref: '#/definitions/shared.APIResponse'
      summary: 自动保存文档
      tags:
      - 编辑器
  /api/v1/documents/{id}/content:
    get:
      consumes:
      - application/json
      description: 获取文档的完整内容（用于编辑器加载）
      parameters:
      - description: 文档ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/shared.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/document.DocumentContentResponse'
              type: object
      summary: 获取文档内容
      tags:
      - 编辑器
    put:
      consumes:
      - application/json
      description: 手动更新文档内容（非自动保存）
      parameters:
      - description: 文档ID
        in: path
        name: id
        required: true
        type: string
      - description: 更新内容请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/document.UpdateContentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
      summary: 更新文档内容
      tags:
      - 编辑器
  /api/v1/documents/{id}/move:
    put:
      consumes:
      - application/json
      description: 移动文档到新的父节点
      parameters:
      - description: 文档ID
        in: path
        name: id
        required: true
        type: string
      - description: 移动文档请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/document.MoveDocumentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
      summary: 移动文档
      tags:
      - 文档管理
  /api/v1/documents/{id}/save-status:
    get:
      consumes:
      - application/json
      description: 获取文档的保存状态和最后保存时间
      parameters:
      - description: 文档ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/shared.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/document.SaveStatusResponse'
              type: object
      summary: 获取保存状态
      tags:
      - 编辑器
  /api/v1/documents/{id}/word-count:
    post:
      consumes:
      - application/json
      description: 计算文档内容的字数统计（支持Markdown过滤）
      parameters:
      - description: 文档ID
        in: path
        name: id
        required: true
        type: string
      - description: 字数统计请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/writer.WordCountRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/shared.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/document.WordCountResult'
              type: object
      summary: 计算字数
      tags:
      - 编辑器
  /api/v1/login:
    post:
      consumes:
      - application/json
      description: 用户登录获取Token
      parameters:
      - description: 登录信息
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/system.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/shared.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/system.LoginResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/shared.ErrorResponse'
      summary: 用户登录
      tags:
      - 用户
  /api/v1/projects:
    get:
      consumes:
      - application/json
      description: 获取当前用户的项目列表（支持分页和筛选）
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: pageSize
        type: integer
      - description: 项目状态
        in: query
        name: status
        type: string
      - description: 项目分类
        in: query
        name: category
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/shared.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/project.ListProjectsResponse'
              type: object
      summary: 获取项目列表
      tags:
      - 项目管理
    post:
      consumes:
      - application/json
      description: 创建一个新的写作项目
      parameters:
      - description: 创建项目请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/project.CreateProjectRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/shared.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/project.CreateProjectResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.APIResponse'
      summary: 创建项目
      tags:
      - 项目管理
  /api/v1/projects/{id}:
    delete:
      consumes:
      - application/json
      description: 删除项目（软删除）
      parameters:
      - description: 项目ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.APIResponse'
      summary: 删除项目
      tags:
      - 项目管理
    get:
      consumes:
      - application/json
      description: 根据ID获取项目详细信息
      parameters:
      - description: 项目ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/shared.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/document.Project'
              type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/shared.APIResponse'
      summary: 获取项目详情
      tags:
      - 项目管理
    put:
      consumes:
      - application/json
      description: 更新项目信息
      parameters:
      - description: 项目ID
        in: path
        name: id
        required: true
        type: string
      - description: 更新项目请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/project.UpdateProjectRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.APIResponse'
      summary: 更新项目
      tags:
      - 项目管理
  /api/v1/projects/{id}/statistics:
    put:
      consumes:
      - application/json
      description: 更新项目的统计信息（字数、章节数等）
      parameters:
      - description: 项目ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
      summary: 更新项目统计信息
      tags:
      - 项目管理
  /api/v1/projects/{projectId}/documents:
    get:
      consumes:
      - application/json
      description: 获取项目下的文档列表（支持分页）
      parameters:
      - description: 项目ID
        in: path
        name: projectId
        required: true
        type: string
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 20
        description: 每页数量
        in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/shared.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/document.ListDocumentsResponse'
              type: object
      summary: 获取文档列表
      tags:
      - 文档管理
    post:
      consumes:
      - application/json
      description: 在项目中创建新文档
      parameters:
      - description: 项目ID
        in: path
        name: projectId
        required: true
        type: string
      - description: 创建文档请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/document.CreateDocumentRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/shared.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/document.CreateDocumentResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.APIResponse'
      summary: 创建文档
      tags:
      - 文档管理
  /api/v1/projects/{projectId}/documents/reorder:
    put:
      consumes:
      - application/json
      description: 批量更新同级文档的顺序
      parameters:
      - description: 项目ID
        in: path
        name: projectId
        required: true
        type: string
      - description: 排序请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/document.ReorderDocumentsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
      summary: 重新排序文档
      tags:
      - 文档管理
  /api/v1/projects/{projectId}/documents/tree:
    get:
      consumes:
      - application/json
      description: 获取项目的文档树形结构
      parameters:
      - description: 项目ID
        in: path
        name: projectId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/shared.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/document.DocumentTreeResponse'
              type: object
      summary: 获取文档树
      tags:
      - 文档管理
  /api/v1/reader/annotations:
    post:
      parameters:
      - description: 创建标注请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/reader.CreateAnnotationRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
      summary: 创建标注
      tags:
      - 阅读器
  /api/v1/reader/annotations/{id}:
    delete:
      parameters:
      - description: 标注ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
      summary: 删除标注
      tags:
      - 阅读器
    put:
      parameters:
      - description: 标注ID
        in: path
        name: id
        required: true
        type: string
      - description: 更新标注请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/reader.UpdateAnnotationRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
      summary: 更新标注
      tags:
      - 阅读器
  /api/v1/reader/annotations/batch:
    delete:
      parameters:
      - description: 批量删除注记请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/reader.BatchDeleteAnnotationsRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
      summary: 批量删除注记
      tags:
      - 阅读器
    post:
      parameters:
      - description: 批量创建注记请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/reader.BatchCreateAnnotationsRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
      summary: 批量创建注记
      tags:
      - 阅读器
    put:
      parameters:
      - description: 批量更新注记请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/reader.BatchUpdateAnnotationsRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
      summary: 批量更新注记
      tags:
      - 阅读器
  /api/v1/reader/annotations/book:
    get:
      parameters:
      - description: 书籍ID
        in: query
        name: bookId
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
      summary: 获取书籍标注
      tags:
      - 阅读器
  /api/v1/reader/annotations/bookmarks:
    get:
      parameters:
      - description: 书籍ID
        in: query
        name: bookId
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
      summary: 获取书签
      tags:
      - 阅读器
  /api/v1/reader/annotations/bookmarks/latest:
    get:
      parameters:
      - description: 书籍ID
        in: query
        name: bookId
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
      summary: 获取最新书签
      tags:
      - 阅读器
  /api/v1/reader/annotations/chapter:
    get:
      parameters:
      - description: 书籍ID
        in: query
        name: bookId
        required: true
        type: string
      - description: 章节ID
        in: query
        name: chapterId
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
      summary: 获取章节标注
      tags:
      - 阅读器
  /api/v1/reader/annotations/export:
    get:
      parameters:
      - description: 书籍ID
        in: query
        name: bookId
        required: true
        type: string
      - default: json
        description: 导出格式 (json/markdown/txt)
        in: query
        name: format
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
      summary: 导出注记
      tags:
      - 阅读器
  /api/v1/reader/annotations/highlights:
    get:
      parameters:
      - description: 书籍ID
        in: query
        name: bookId
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
      summary: 获取高亮
      tags:
      - 阅读器
  /api/v1/reader/annotations/notes:
    get:
      parameters:
      - description: 书籍ID
        in: query
        name: bookId
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
      summary: 获取笔记
      tags:
      - 阅读器
  /api/v1/reader/annotations/notes/search:
    get:
      parameters:
      - description: 搜索关键词
        in: query
        name: keyword
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
      summary: 搜索笔记
      tags:
      - 阅读器
  /api/v1/reader/annotations/public:
    get:
      parameters:
      - description: 书籍ID
        in: query
        name: bookId
        required: true
        type: string
      - description: 章节ID
        in: query
        name: chapterId
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
      summary: 获取公开标注
      tags:
      - 阅读器
  /api/v1/reader/annotations/recent:
    get:
      parameters:
      - default: 20
        description: 数量限制
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
      summary: 获取最近标注
      tags:
      - 阅读器
  /api/v1/reader/annotations/stats:
    get:
      parameters:
      - description: 书籍ID
        in: query
        name: bookId
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
      summary: 获取注记统计
      tags:
      - 阅读器
  /api/v1/reader/annotations/sync:
    post:
      parameters:
      - description: 同步注记请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/reader.SyncAnnotationsRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
      summary: 同步注记
      tags:
      - 阅读器
  /api/v1/reader/behavior:
    post:
      consumes:
      - application/json
      description: 记录读者的阅读行为（浏览、完读、跳出等）
      parameters:
      - description: 读者行为数据
        in: body
        name: behavior
        required: true
        schema:
          $ref: '#/definitions/stats.ReaderBehavior'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/shared.APIResponse'
      summary: 记录读者行为
      tags:
      - Stats
  /api/v1/reader/chapters:
    get:
      parameters:
      - description: 书籍ID
        in: query
        name: bookId
        required: true
        type: string
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 20
        description: 每页数量
        in: query
        name: size
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
      summary: 获取书籍章节列表
      tags:
      - 阅读器
  /api/v1/reader/chapters/{id}:
    get:
      parameters:
      - description: 章节ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
      summary: 获取章节信息
      tags:
      - 阅读器
  /api/v1/reader/chapters/{id}/content:
    get:
      parameters:
      - description: 章节ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
      summary: 获取章节内容
      tags:
      - 阅读器
  /api/v1/reader/chapters/first:
    get:
      parameters:
      - description: 书籍ID
        in: query
        name: bookId
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
      summary: 获取第一章
      tags:
      - 阅读器
  /api/v1/reader/chapters/last:
    get:
      parameters:
      - description: 书籍ID
        in: query
        name: bookId
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
      summary: 获取最后一章
      tags:
      - 阅读器
  /api/v1/reader/chapters/navigation:
    get:
      parameters:
      - description: 书籍ID
        in: query
        name: bookId
        required: true
        type: string
      - description: 当前章节号
        in: query
        name: chapterNum
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
      summary: 获取章节导航
      tags:
      - 阅读器
  /api/v1/reader/progress:
    post:
      parameters:
      - description: 保存进度请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/reader.SaveProgressRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
      summary: 保存阅读进度
      tags:
      - 阅读器
  /api/v1/reader/progress/{bookId}:
    get:
      parameters:
      - description: 书籍ID
        in: path
        name: bookId
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
      summary: 获取阅读进度
      tags:
      - 阅读器
  /api/v1/reader/progress/finished:
    get:
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
      summary: 获取已读完的书籍
      tags:
      - 阅读器
  /api/v1/reader/progress/history:
    get:
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 20
        description: 每页数量
        in: query
        name: size
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
      summary: 获取阅读历史
      tags:
      - 阅读器
  /api/v1/reader/progress/reading-time:
    put:
      parameters:
      - description: 更新时长请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/reader.UpdateReadingTimeRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
      summary: 更新阅读时长
      tags:
      - 阅读器
  /api/v1/reader/progress/recent:
    get:
      parameters:
      - default: 20
        description: 数量限制
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
      summary: 获取最近阅读记录
      tags:
      - 阅读器
  /api/v1/reader/progress/stats:
    get:
      parameters:
      - default: '"all"'
        description: 统计周期
        in: query
        name: period
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
      summary: 获取阅读统计
      tags:
      - 阅读器
  /api/v1/reader/progress/unfinished:
    get:
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
      summary: 获取未读完的书籍
      tags:
      - 阅读器
  /api/v1/reader/settings:
    get:
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
      summary: 获取阅读设置
      tags:
      - 阅读器
    post:
      parameters:
      - description: 阅读设置
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/reader.ReadingSettings'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
      summary: 保存阅读设置
      tags:
      - 阅读器
    put:
      parameters:
      - description: 更新设置请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/reader.UpdateSettingsRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
      summary: 更新阅读设置
      tags:
      - 阅读器
  /api/v1/reading/books/{book_id}/average-rating:
    get:
      consumes:
      - application/json
      description: 根据图书ID获取该图书的平均评分
      parameters:
      - description: 图书ID
        in: path
        name: book_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/reading.APIResponse'
      summary: 获取图书平均评分
      tags:
      - 图书评分
  /api/v1/reading/books/{book_id}/favorite:
    post:
      consumes:
      - application/json
      description: 为指定图书增加收藏量
      parameters:
      - description: 图书ID
        in: path
        name: book_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 增加成功
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/reading.APIResponse'
      summary: 增加收藏量
      tags:
      - 图书统计
  /api/v1/reading/books/{book_id}/rating-distribution:
    get:
      consumes:
      - application/json
      description: 根据图书ID获取该图书的评分分布统计
      parameters:
      - description: 图书ID
        in: path
        name: book_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/reading.APIResponse'
      summary: 获取图书评分分布
      tags:
      - 图书评分
  /api/v1/reading/books/{book_id}/ratings:
    get:
      consumes:
      - application/json
      description: 根据图书ID获取该图书的所有评分列表
      parameters:
      - description: 图书ID
        in: path
        name: book_id
        required: true
        type: string
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/reading.APIResponse'
      summary: 获取图书的所有评分
      tags:
      - 图书评分
  /api/v1/reading/books/{book_id}/statistics:
    get:
      consumes:
      - application/json
      description: 根据图书ID获取统计信息
      parameters:
      - description: 图书ID
        in: path
        name: book_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "404":
          description: 统计信息不存在
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/reading.APIResponse'
      summary: 获取图书统计信息
      tags:
      - 图书统计
  /api/v1/reading/books/{book_id}/view:
    post:
      consumes:
      - application/json
      description: 为指定图书增加浏览量
      parameters:
      - description: 图书ID
        in: path
        name: book_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 增加成功
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/reading.APIResponse'
      summary: 增加浏览量
      tags:
      - 图书统计
  /api/v1/reading/ratings:
    post:
      consumes:
      - application/json
      description: 为图书创建新的评分
      parameters:
      - description: 评分信息
        in: body
        name: rating
        required: true
        schema:
          $ref: '#/definitions/bookstore.BookRating'
      produces:
      - application/json
      responses:
        "201":
          description: 创建成功
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/reading.APIResponse'
      summary: 创建评分
      tags:
      - 图书评分
  /api/v1/reading/ratings/{id}:
    delete:
      consumes:
      - application/json
      description: 删除指定ID的评分
      parameters:
      - description: 评分ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "404":
          description: 评分不存在
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/reading.APIResponse'
      summary: 删除评分
      tags:
      - 图书评分
    get:
      consumes:
      - application/json
      description: 根据评分ID获取评分详情信息
      parameters:
      - description: 评分ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "404":
          description: 评分不存在
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/reading.APIResponse'
      summary: 获取评分详情
      tags:
      - 图书评分
    put:
      consumes:
      - application/json
      description: 更新指定ID的评分信息
      parameters:
      - description: 评分ID
        in: path
        name: id
        required: true
        type: string
      - description: 评分信息
        in: body
        name: rating
        required: true
        schema:
          $ref: '#/definitions/bookstore.BookRating'
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "404":
          description: 评分不存在
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/reading.APIResponse'
      summary: 更新评分
      tags:
      - 图书评分
  /api/v1/reading/ratings/{id}/like:
    post:
      consumes:
      - application/json
      description: 为指定评分点赞
      parameters:
      - description: 评分ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 点赞成功
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/reading.APIResponse'
      summary: 点赞评分
      tags:
      - 图书评分
  /api/v1/reading/ratings/{id}/unlike:
    post:
      consumes:
      - application/json
      description: 取消对指定评分的点赞
      parameters:
      - description: 评分ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 取消点赞成功
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/reading.APIResponse'
      summary: 取消点赞评分
      tags:
      - 图书评分
  /api/v1/reading/ratings/search:
    get:
      consumes:
      - application/json
      description: 根据关键词搜索评分
      parameters:
      - description: 搜索关键词
        in: query
        name: keyword
        required: true
        type: string
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/reading.APIResponse'
      summary: 搜索评分
      tags:
      - 图书评分
  /api/v1/reading/statistics/aggregated:
    get:
      consumes:
      - application/json
      description: 获取系统整体的聚合统计信息
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/reading.APIResponse'
      summary: 获取聚合统计信息
      tags:
      - 图书统计
  /api/v1/reading/statistics/daily-report:
    get:
      consumes:
      - application/json
      description: 获取指定日期的统计报告
      parameters:
      - description: 日期
        format: date
        in: query
        name: date
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/reading.APIResponse'
      summary: 获取日统计报告
      tags:
      - 图书统计
  /api/v1/reading/statistics/hottest:
    get:
      consumes:
      - application/json
      description: 获取热度最高的图书列表
      parameters:
      - default: 10
        description: 返回数量
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/reading.APIResponse'
      summary: 获取最热门的图书
      tags:
      - 图书统计
  /api/v1/reading/statistics/monthly-report:
    get:
      consumes:
      - application/json
      description: 获取指定月份的统计报告
      parameters:
      - description: 年份
        in: query
        name: year
        required: true
        type: integer
      - description: 月份
        in: query
        name: month
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/reading.APIResponse'
      summary: 获取月统计报告
      tags:
      - 图书统计
  /api/v1/reading/statistics/search:
    get:
      consumes:
      - application/json
      description: 根据关键词搜索统计信息
      parameters:
      - description: 搜索关键词
        in: query
        name: keyword
        required: true
        type: string
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/reading.APIResponse'
      summary: 搜索统计信息
      tags:
      - 图书统计
  /api/v1/reading/statistics/time-range:
    get:
      consumes:
      - application/json
      description: 获取指定时间范围内的统计信息
      parameters:
      - description: 开始时间
        format: date-time
        in: query
        name: start_time
        required: true
        type: string
      - description: 结束时间
        format: date-time
        in: query
        name: end_time
        required: true
        type: string
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/reading.APIResponse'
      summary: 获取时间范围内的统计信息
      tags:
      - 图书统计
  /api/v1/reading/statistics/top-favorited:
    get:
      consumes:
      - application/json
      description: 获取收藏量最高的图书列表
      parameters:
      - default: 10
        description: 返回数量
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/reading.APIResponse'
      summary: 获取最多收藏的图书
      tags:
      - 图书统计
  /api/v1/reading/statistics/top-rated:
    get:
      consumes:
      - application/json
      description: 获取评分最高的图书列表
      parameters:
      - default: 10
        description: 返回数量
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/reading.APIResponse'
      summary: 获取最高评分的图书
      tags:
      - 图书统计
  /api/v1/reading/statistics/top-viewed:
    get:
      consumes:
      - application/json
      description: 获取浏览量最高的图书列表
      parameters:
      - default: 10
        description: 返回数量
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/reading.APIResponse'
      summary: 获取最多浏览的图书
      tags:
      - 图书统计
  /api/v1/reading/statistics/trending:
    get:
      consumes:
      - application/json
      description: 获取当前趋势图书列表
      parameters:
      - default: 10
        description: 返回数量
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/reading.APIResponse'
      summary: 获取趋势图书
      tags:
      - 图书统计
  /api/v1/reading/statistics/weekly-report:
    get:
      consumes:
      - application/json
      description: 获取指定周的统计报告
      parameters:
      - description: 年份
        in: query
        name: year
        required: true
        type: integer
      - description: 周数
        in: query
        name: week
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/reading.APIResponse'
      summary: 获取周统计报告
      tags:
      - 图书统计
  /api/v1/reading/users/{user_id}/ratings:
    get:
      consumes:
      - application/json
      description: 根据用户ID获取该用户的所有评分列表
      parameters:
      - description: 用户ID
        in: path
        name: user_id
        required: true
        type: string
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/reading.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/reading.APIResponse'
      summary: 获取用户的所有评分
      tags:
      - 图书评分
  /api/v1/recommendation/behavior:
    post:
      parameters:
      - description: 行为数据
        in: body
        name: body
        required: true
        schema:
          type: object
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
      summary: 记录用户行为
      tags:
      - 推荐系统
  /api/v1/recommendation/category:
    get:
      parameters:
      - description: 分类名称
        in: query
        name: category
        required: true
        type: string
      - default: 20
        description: 推荐数量
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
      summary: 获取分类推荐
      tags:
      - 推荐系统
  /api/v1/recommendation/homepage:
    get:
      parameters:
      - default: 20
        description: 推荐数量
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
      summary: 获取首页推荐（混合推荐策略）
      tags:
      - 推荐系统
  /api/v1/recommendation/hot:
    get:
      parameters:
      - default: 20
        description: 推荐数量
        in: query
        name: limit
        type: integer
      - default: 7
        description: 统计天数
        in: query
        name: days
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
      summary: 获取热门推荐
      tags:
      - 推荐系统
  /api/v1/recommendation/personalized:
    get:
      parameters:
      - default: 10
        description: 推荐数量
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
      summary: 获取个性化推荐
      tags:
      - 推荐系统
  /api/v1/recommendation/similar:
    get:
      parameters:
      - description: 物品ID（书籍ID）
        in: query
        name: itemId
        required: true
        type: string
      - default: 10
        description: 推荐数量
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
      summary: 获取相似物品推荐
      tags:
      - 推荐系统
  /api/v1/register:
    post:
      consumes:
      - application/json
      description: 注册新用户账号
      parameters:
      - description: 注册信息
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/system.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/shared.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/system.RegisterResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/shared.ErrorResponse'
      summary: 用户注册
      tags:
      - 用户
  /api/v1/shared/admin/operation-logs:
    get:
      consumes:
      - application/json
      description: 获取管理员操作日志
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 20
        description: 每页数量
        in: query
        name: page_size
        type: integer
      - description: 管理员ID
        in: query
        name: admin_id
        type: string
      - description: 操作类型
        in: query
        name: operation
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.PaginatedResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/shared.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: 获取操作日志
      tags:
      - 管理
  /api/v1/shared/admin/reviews:
    post:
      consumes:
      - application/json
      description: 审核用户提交的内容
      parameters:
      - description: 审核信息
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/shared.ReviewContentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/shared.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: 审核内容
      tags:
      - 管理
  /api/v1/shared/admin/reviews/pending:
    get:
      consumes:
      - application/json
      description: 获取待审核内容列表
      parameters:
      - description: 内容类型
        in: query
        name: content_type
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/shared.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: 获取待审核内容
      tags:
      - 管理
  /api/v1/shared/admin/users/{user_id}/statistics:
    get:
      consumes:
      - application/json
      description: 获取指定用户的统计信息
      parameters:
      - description: 用户ID
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/shared.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: 获取用户统计
      tags:
      - 管理
  /api/v1/shared/admin/withdraw/review:
    post:
      consumes:
      - application/json
      description: 审核用户提现申请（批准或拒绝）
      parameters:
      - description: 审核信息
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/shared.ReviewWithdrawRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/shared.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: 审核提现
      tags:
      - 管理
  /api/v1/shared/auth/login:
    post:
      consumes:
      - application/json
      description: 用户登录获取Token
      parameters:
      - description: 登录信息
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/shared.APIResponse'
      summary: 用户登录
      tags:
      - 认证
  /api/v1/shared/auth/logout:
    post:
      consumes:
      - application/json
      description: 用户登出，使Token失效
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/shared.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: 用户登出
      tags:
      - 认证
  /api/v1/shared/auth/permissions:
    get:
      consumes:
      - application/json
      description: 获取当前用户的权限列表
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/shared.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: 获取用户权限
      tags:
      - 认证
  /api/v1/shared/auth/refresh:
    post:
      consumes:
      - application/json
      description: 使用当前Token获取新Token
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/shared.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: 刷新Token
      tags:
      - 认证
  /api/v1/shared/auth/register:
    post:
      consumes:
      - application/json
      description: 注册新用户账号
      parameters:
      - description: 注册信息
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/shared.APIResponse'
      summary: 用户注册
      tags:
      - 认证
  /api/v1/shared/auth/roles:
    get:
      consumes:
      - application/json
      description: 获取当前用户的角色列表
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/shared.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: 获取用户角色
      tags:
      - 认证
  /api/v1/shared/storage/download/{file_id}:
    get:
      consumes:
      - application/json
      description: 下载指定的文件
      parameters:
      - description: 文件ID
        in: path
        name: file_id
        required: true
        type: string
      produces:
      - application/octet-stream
      responses:
        "200":
          description: OK
          schema:
            type: file
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/shared.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: 下载文件
      tags:
      - 存储
  /api/v1/shared/storage/files:
    get:
      consumes:
      - application/json
      description: 列出用户的文件列表
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 20
        description: 每页数量
        in: query
        name: page_size
        type: integer
      - description: 路径前缀
        in: query
        name: path
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/shared.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: 列出文件
      tags:
      - 存储
  /api/v1/shared/storage/files/{file_id}:
    delete:
      consumes:
      - application/json
      description: 删除指定的文件
      parameters:
      - description: 文件ID
        in: path
        name: file_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/shared.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: 删除文件
      tags:
      - 存储
    get:
      consumes:
      - application/json
      description: 获取指定文件的详细信息
      parameters:
      - description: 文件ID
        in: path
        name: file_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/shared.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: 获取文件信息
      tags:
      - 存储
  /api/v1/shared/storage/files/{file_id}/url:
    get:
      consumes:
      - application/json
      description: 获取文件的临时访问URL
      parameters:
      - description: 文件ID
        in: path
        name: file_id
        required: true
        type: string
      - default: 3600
        description: 过期时间(秒)
        in: query
        name: expire
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/shared.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: 获取文件访问URL
      tags:
      - 存储
  /api/v1/shared/storage/upload:
    post:
      consumes:
      - multipart/form-data
      description: 上传文件到存储服务
      parameters:
      - description: 上传文件
        in: formData
        name: file
        required: true
        type: file
      - description: 存储路径
        in: formData
        name: path
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/shared.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: 上传文件
      tags:
      - 存储
  /api/v1/shared/wallet:
    get:
      consumes:
      - application/json
      description: 获取用户完整钱包信息
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/shared.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: 获取钱包信息
      tags:
      - 钱包
  /api/v1/shared/wallet/balance:
    get:
      consumes:
      - application/json
      description: 查询用户钱包余额
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/shared.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: 查询余额
      tags:
      - 钱包
  /api/v1/shared/wallet/consume:
    post:
      consumes:
      - application/json
      description: 用户钱包消费
      parameters:
      - description: 消费信息
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/shared.ConsumeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/shared.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: 钱包消费
      tags:
      - 钱包
  /api/v1/shared/wallet/recharge:
    post:
      consumes:
      - application/json
      description: 用户钱包充值
      parameters:
      - description: 充值信息
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/shared.RechargeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/shared.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: 钱包充值
      tags:
      - 钱包
  /api/v1/shared/wallet/transactions:
    get:
      consumes:
      - application/json
      description: 查询用户交易记录列表
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 20
        description: 每页数量
        in: query
        name: page_size
        type: integer
      - description: 交易类型
        in: query
        name: type
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/shared.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: 查询交易记录
      tags:
      - 钱包
  /api/v1/shared/wallet/transfer:
    post:
      consumes:
      - application/json
      description: 向其他用户转账
      parameters:
      - description: 转账信息
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/shared.TransferRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/shared.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: 用户转账
      tags:
      - 钱包
  /api/v1/shared/wallet/withdraw:
    post:
      consumes:
      - application/json
      description: 用户申请提现
      parameters:
      - description: 提现信息
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/shared.WithdrawRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/shared.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: 申请提现
      tags:
      - 钱包
  /api/v1/shared/wallet/withdrawals:
    get:
      consumes:
      - application/json
      description: 查询用户提现申请列表
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 20
        description: 每页数量
        in: query
        name: page_size
        type: integer
      - description: 状态
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/shared.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: 查询提现申请
      tags:
      - 钱包
  /api/v1/user/shortcuts:
    get:
      consumes:
      - application/json
      description: 获取当前用户的快捷键配置（包括自定义和默认）
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/shared.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/document.ShortcutConfig'
              type: object
      summary: 获取用户快捷键配置
      tags:
      - 编辑器
    put:
      consumes:
      - application/json
      description: 更新用户的自定义快捷键配置
      parameters:
      - description: 快捷键配置
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/writer.UpdateShortcutsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
      summary: 更新用户快捷键配置
      tags:
      - 编辑器
  /api/v1/user/shortcuts/help:
    get:
      consumes:
      - application/json
      description: 获取快捷键帮助文档（按分类）
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/shared.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/document.ShortcutCategory'
                  type: array
              type: object
      summary: 获取快捷键帮助
      tags:
      - 编辑器
  /api/v1/user/shortcuts/reset:
    post:
      consumes:
      - application/json
      description: 重置用户快捷键为默认配置
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
      summary: 重置用户快捷键配置
      tags:
      - 编辑器
  /api/v1/users/{userId}/violation-summary:
    get:
      consumes:
      - application/json
      description: 获取指定用户的违规统计信息
      parameters:
      - description: 用户ID
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
      summary: 获取用户违规统计
      tags:
      - 审核
  /api/v1/users/{userId}/violations:
    get:
      consumes:
      - application/json
      description: 获取指定用户的所有违规记录
      parameters:
      - description: 用户ID
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
      summary: 获取用户违规记录
      tags:
      - 审核
  /api/v1/users/password:
    put:
      consumes:
      - application/json
      description: 修改当前用户的登录密码
      parameters:
      - description: 密码信息
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/system.ChangePasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/shared.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: 修改密码
      tags:
      - 用户
  /api/v1/users/profile:
    get:
      consumes:
      - application/json
      description: 获取当前登录用户的详细信息
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/shared.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/system.UserProfileResponse'
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/shared.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/shared.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: 获取当前用户信息
      tags:
      - 用户
    put:
      consumes:
      - application/json
      description: 更新当前登录用户的个人信息
      parameters:
      - description: 更新信息
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/system.UpdateProfileRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/shared.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: 更新当前用户信息
      tags:
      - 用户
  /api/v1/writer/books/{book_id}/daily-stats:
    get:
      consumes:
      - application/json
      description: 获取作品最近N天的每日统计数据
      parameters:
      - description: 作品ID
        in: path
        name: book_id
        required: true
        type: string
      - default: 7
        description: 天数
        in: query
        name: days
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/shared.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/stats.BookStatsDaily'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/shared.APIResponse'
      summary: 获取作品每日统计
      tags:
      - Stats
  /api/v1/writer/books/{book_id}/drop-off-points:
    get:
      consumes:
      - application/json
      description: 获取跳出率最高的章节列表
      parameters:
      - description: 作品ID
        in: path
        name: book_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/shared.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/stats.ChapterStatsAggregate'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/shared.APIResponse'
      summary: 获取作品跳出点分析
      tags:
      - Stats
  /api/v1/writer/books/{book_id}/heatmap:
    get:
      consumes:
      - application/json
      description: 获取作品各章节的阅读热度分布
      parameters:
      - description: 作品ID
        in: path
        name: book_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/shared.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/stats.HeatmapPoint'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/shared.APIResponse'
      summary: 获取作品阅读热力图
      tags:
      - Stats
  /api/v1/writer/books/{book_id}/retention:
    get:
      consumes:
      - application/json
      description: 获取作品的N日留存率
      parameters:
      - description: 作品ID
        in: path
        name: book_id
        required: true
        type: string
      - default: 7
        description: 天数
        in: query
        name: days
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/shared.APIResponse'
            - properties:
                data:
                  additionalProperties:
                    format: float64
                    type: number
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/shared.APIResponse'
      summary: 获取作品留存率
      tags:
      - Stats
  /api/v1/writer/books/{book_id}/revenue:
    get:
      consumes:
      - application/json
      description: 获取作品的收入细分数据
      parameters:
      - description: 作品ID
        in: path
        name: book_id
        required: true
        type: string
      - description: 开始日期 (YYYY-MM-DD)
        in: query
        name: start_date
        type: string
      - description: 结束日期 (YYYY-MM-DD)
        in: query
        name: end_date
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/shared.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/stats.RevenueBreakdown'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/shared.APIResponse'
      summary: 获取作品收入统计
      tags:
      - Stats
  /api/v1/writer/books/{book_id}/stats:
    get:
      consumes:
      - application/json
      description: 获取作品的完整统计信息，包括阅读、收入、互动等数据
      parameters:
      - description: 作品ID
        in: path
        name: book_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/shared.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/stats.BookStats'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/shared.APIResponse'
      summary: 获取作品统计数据
      tags:
      - Stats
  /api/v1/writer/books/{book_id}/top-chapters:
    get:
      consumes:
      - application/json
      description: 获取作品的热门章节统计（阅读量最高、收入最高、完读率最低、跳出率最高）
      parameters:
      - description: 作品ID
        in: path
        name: book_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/shared.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/stats.TopChapters'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/shared.APIResponse'
      summary: 获取热门章节列表
      tags:
      - Stats
  /api/v1/writer/chapters/{chapter_id}/stats:
    get:
      consumes:
      - application/json
      description: 获取单个章节的统计信息
      parameters:
      - description: 章节ID
        in: path
        name: chapter_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/shared.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/stats.ChapterStats'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/shared.APIResponse'
      summary: 获取章节统计数据
      tags:
      - Stats
securityDefinitions:
  Bearer:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
tags:
- description: 书城相关接口，包括首页、书籍列表、分类等
  name: 书城
- description: 书籍详情、搜索、评分等功能
  name: 书籍
- description: 用户注册、登录、个人信息管理
  name: 用户
- description: 写作项目管理
  name: 项目
- description: 文档编辑、版本控制
  name: 文档
- description: AI写作辅助功能
  name: AI辅助
- description: 钱包、充值、提现功能
  name: 钱包
