# GolangCI-Lint 配置文件
# 参考: https://golangci-lint.run/usage/configuration/

run:
  timeout: 5m
  tests: true
  skip-dirs:
    - vendor
    - test/fixtures
  skip-files:
    - ".*\\.pb\\.go$"
    - ".*_test\\.go$"

linters:
  enable:
    - errcheck      # 检查未处理的错误
    - gosimple      # 简化代码
    - govet         # 官方 go vet
    - ineffassign   # 检测无效赋值
    - staticcheck   # 静态分析
    - typecheck     # 类型检查
    - unused        # 检查未使用的代码
    - gofmt         # 格式化检查
    - goimports     # import 排序检查
    - misspell      # 拼写检查
    - revive        # 替代 golint
    - gosec         # 安全检查
  disable:
    - mnd           # 禁用 magic number detector，因为我们已经用http.Status常量替换

linters-settings:
  errcheck:
    check-type-assertions: true
    check-blank: false

  govet:
    check-shadowing: false
    enable-all: true
    disable:
      - fieldalignment  # 禁用字段对齐检查，保持代码可读性

  gofmt:
    simplify: true

  goimports:
    local-prefixes: Qingyu_backend

  revive:
    ignore-generated-header: true
    severity: warning
    rules:
      - name: var-naming
        severity: warning
        disabled: false
        arguments:
          - ["ID", "API", "URL", "HTTP", "JSON", "XML", "HTML", "SQL", "DB", "JWT"]  # 允许的缩写
      - name: unused-parameter
        severity: warning
        disabled: false

  misspell:
    locale: US

  gosec:
    excludes:
      - G104  # 未检查的错误（由 errcheck 处理）
      - G304  # 文件路径注入（在某些情况下需要）

issues:
  exclude-rules:
    # 排除测试文件的某些检查
    - path: _test\.go
      linters:
        - gosec
        - errcheck

    # 排除自动生成的文件
    - path: ".*\\.pb\\.go"
      linters:
        - all

    # 排除某些特定错误
    - text: "G404: Use of weak random number generator"
      linters:
        - gosec

  max-issues-per-linter: 0
  max-same-issues: 0
  new: false

output:
  format: colored-line-number
  print-issued-lines: true
  print-linter-name: true
  uniq-by-line: true
  sort-results: true
