// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.33.0--rc2
// source: ai_service.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GenerateContentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ChapterId     string                 `protobuf:"bytes,2,opt,name=chapter_id,json=chapterId,proto3" json:"chapter_id,omitempty"`
	Prompt        string                 `protobuf:"bytes,3,opt,name=prompt,proto3" json:"prompt,omitempty"`
	Options       *GenerateOptions       `protobuf:"bytes,4,opt,name=options,proto3" json:"options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenerateContentRequest) Reset() {
	*x = GenerateContentRequest{}
	mi := &file_ai_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateContentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateContentRequest) ProtoMessage() {}

func (x *GenerateContentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ai_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateContentRequest.ProtoReflect.Descriptor instead.
func (*GenerateContentRequest) Descriptor() ([]byte, []int) {
	return file_ai_service_proto_rawDescGZIP(), []int{0}
}

func (x *GenerateContentRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GenerateContentRequest) GetChapterId() string {
	if x != nil {
		return x.ChapterId
	}
	return ""
}

func (x *GenerateContentRequest) GetPrompt() string {
	if x != nil {
		return x.Prompt
	}
	return ""
}

func (x *GenerateContentRequest) GetOptions() *GenerateOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

type GenerateOptions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Model         string                 `protobuf:"bytes,1,opt,name=model,proto3" json:"model,omitempty"`                           // 模型名称
	MaxTokens     int32                  `protobuf:"varint,2,opt,name=max_tokens,json=maxTokens,proto3" json:"max_tokens,omitempty"` // 最大 Token 数
	Temperature   float32                `protobuf:"fixed32,3,opt,name=temperature,proto3" json:"temperature,omitempty"`             // 温度参数 0.0-1.0
	Stop          []string               `protobuf:"bytes,4,rep,name=stop,proto3" json:"stop,omitempty"`                             // 停止词
	Stream        bool                   `protobuf:"varint,5,opt,name=stream,proto3" json:"stream,omitempty"`                        // 是否流式输出
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenerateOptions) Reset() {
	*x = GenerateOptions{}
	mi := &file_ai_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateOptions) ProtoMessage() {}

func (x *GenerateOptions) ProtoReflect() protoreflect.Message {
	mi := &file_ai_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateOptions.ProtoReflect.Descriptor instead.
func (*GenerateOptions) Descriptor() ([]byte, []int) {
	return file_ai_service_proto_rawDescGZIP(), []int{1}
}

func (x *GenerateOptions) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *GenerateOptions) GetMaxTokens() int32 {
	if x != nil {
		return x.MaxTokens
	}
	return 0
}

func (x *GenerateOptions) GetTemperature() float32 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *GenerateOptions) GetStop() []string {
	if x != nil {
		return x.Stop
	}
	return nil
}

func (x *GenerateOptions) GetStream() bool {
	if x != nil {
		return x.Stream
	}
	return false
}

type GenerateContentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Content       string                 `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	TokensUsed    int32                  `protobuf:"varint,2,opt,name=tokens_used,json=tokensUsed,proto3" json:"tokens_used,omitempty"`
	Model         string                 `protobuf:"bytes,3,opt,name=model,proto3" json:"model,omitempty"`
	GeneratedAt   int64                  `protobuf:"varint,4,opt,name=generated_at,json=generatedAt,proto3" json:"generated_at,omitempty"` // Unix timestamp
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenerateContentResponse) Reset() {
	*x = GenerateContentResponse{}
	mi := &file_ai_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateContentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateContentResponse) ProtoMessage() {}

func (x *GenerateContentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ai_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateContentResponse.ProtoReflect.Descriptor instead.
func (*GenerateContentResponse) Descriptor() ([]byte, []int) {
	return file_ai_service_proto_rawDescGZIP(), []int{2}
}

func (x *GenerateContentResponse) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *GenerateContentResponse) GetTokensUsed() int32 {
	if x != nil {
		return x.TokensUsed
	}
	return 0
}

func (x *GenerateContentResponse) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *GenerateContentResponse) GetGeneratedAt() int64 {
	if x != nil {
		return x.GeneratedAt
	}
	return 0
}

type RAGQueryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Query         string                 `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	ProjectId     string                 `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Filters       *RAGFilters            `protobuf:"bytes,3,opt,name=filters,proto3" json:"filters,omitempty"`
	TopK          int32                  `protobuf:"varint,4,opt,name=top_k,json=topK,proto3" json:"top_k,omitempty"` // 返回结果数量
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RAGQueryRequest) Reset() {
	*x = RAGQueryRequest{}
	mi := &file_ai_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RAGQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RAGQueryRequest) ProtoMessage() {}

func (x *RAGQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ai_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RAGQueryRequest.ProtoReflect.Descriptor instead.
func (*RAGQueryRequest) Descriptor() ([]byte, []int) {
	return file_ai_service_proto_rawDescGZIP(), []int{3}
}

func (x *RAGQueryRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *RAGQueryRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *RAGQueryRequest) GetFilters() *RAGFilters {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *RAGQueryRequest) GetTopK() int32 {
	if x != nil {
		return x.TopK
	}
	return 0
}

type RAGFilters struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DocTypes      []string               `protobuf:"bytes,1,rep,name=doc_types,json=docTypes,proto3" json:"doc_types,omitempty"`             // 文档类型过滤
	CharacterIds  []string               `protobuf:"bytes,2,rep,name=character_ids,json=characterIds,proto3" json:"character_ids,omitempty"` // 角色 ID 过滤
	TimelineIds   []string               `protobuf:"bytes,3,rep,name=timeline_ids,json=timelineIds,proto3" json:"timeline_ids,omitempty"`    // 时间线 ID 过滤
	ChapterIds    []string               `protobuf:"bytes,4,rep,name=chapter_ids,json=chapterIds,proto3" json:"chapter_ids,omitempty"`       // 章节 ID 过滤
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RAGFilters) Reset() {
	*x = RAGFilters{}
	mi := &file_ai_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RAGFilters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RAGFilters) ProtoMessage() {}

func (x *RAGFilters) ProtoReflect() protoreflect.Message {
	mi := &file_ai_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RAGFilters.ProtoReflect.Descriptor instead.
func (*RAGFilters) Descriptor() ([]byte, []int) {
	return file_ai_service_proto_rawDescGZIP(), []int{4}
}

func (x *RAGFilters) GetDocTypes() []string {
	if x != nil {
		return x.DocTypes
	}
	return nil
}

func (x *RAGFilters) GetCharacterIds() []string {
	if x != nil {
		return x.CharacterIds
	}
	return nil
}

func (x *RAGFilters) GetTimelineIds() []string {
	if x != nil {
		return x.TimelineIds
	}
	return nil
}

func (x *RAGFilters) GetChapterIds() []string {
	if x != nil {
		return x.ChapterIds
	}
	return nil
}

type RAGQueryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       []*RAGResult           `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Total         int32                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RAGQueryResponse) Reset() {
	*x = RAGQueryResponse{}
	mi := &file_ai_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RAGQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RAGQueryResponse) ProtoMessage() {}

func (x *RAGQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ai_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RAGQueryResponse.ProtoReflect.Descriptor instead.
func (*RAGQueryResponse) Descriptor() ([]byte, []int) {
	return file_ai_service_proto_rawDescGZIP(), []int{5}
}

func (x *RAGQueryResponse) GetResults() []*RAGResult {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *RAGQueryResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type RAGResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Content       string                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	Score         float32                `protobuf:"fixed32,3,opt,name=score,proto3" json:"score,omitempty"`
	DocType       string                 `protobuf:"bytes,4,opt,name=doc_type,json=docType,proto3" json:"doc_type,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RAGResult) Reset() {
	*x = RAGResult{}
	mi := &file_ai_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RAGResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RAGResult) ProtoMessage() {}

func (x *RAGResult) ProtoReflect() protoreflect.Message {
	mi := &file_ai_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RAGResult.ProtoReflect.Descriptor instead.
func (*RAGResult) Descriptor() ([]byte, []int) {
	return file_ai_service_proto_rawDescGZIP(), []int{6}
}

func (x *RAGResult) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RAGResult) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *RAGResult) GetScore() float32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *RAGResult) GetDocType() string {
	if x != nil {
		return x.DocType
	}
	return ""
}

func (x *RAGResult) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type ContextRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ChapterId     string                 `protobuf:"bytes,2,opt,name=chapter_id,json=chapterId,proto3" json:"chapter_id,omitempty"`
	TaskType      string                 `protobuf:"bytes,3,opt,name=task_type,json=taskType,proto3" json:"task_type,omitempty"` // continue_writing, create_chapter, review_content
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContextRequest) Reset() {
	*x = ContextRequest{}
	mi := &file_ai_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContextRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContextRequest) ProtoMessage() {}

func (x *ContextRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ai_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContextRequest.ProtoReflect.Descriptor instead.
func (*ContextRequest) Descriptor() ([]byte, []int) {
	return file_ai_service_proto_rawDescGZIP(), []int{7}
}

func (x *ContextRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ContextRequest) GetChapterId() string {
	if x != nil {
		return x.ChapterId
	}
	return ""
}

func (x *ContextRequest) GetTaskType() string {
	if x != nil {
		return x.TaskType
	}
	return ""
}

type ContextResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskType      string                 `protobuf:"bytes,1,opt,name=task_type,json=taskType,proto3" json:"task_type,omitempty"`
	Context       *WorkspaceContext      `protobuf:"bytes,2,opt,name=context,proto3" json:"context,omitempty"`
	TokenCount    int32                  `protobuf:"varint,3,opt,name=token_count,json=tokenCount,proto3" json:"token_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContextResponse) Reset() {
	*x = ContextResponse{}
	mi := &file_ai_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContextResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContextResponse) ProtoMessage() {}

func (x *ContextResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ai_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContextResponse.ProtoReflect.Descriptor instead.
func (*ContextResponse) Descriptor() ([]byte, []int) {
	return file_ai_service_proto_rawDescGZIP(), []int{8}
}

func (x *ContextResponse) GetTaskType() string {
	if x != nil {
		return x.TaskType
	}
	return ""
}

func (x *ContextResponse) GetContext() *WorkspaceContext {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *ContextResponse) GetTokenCount() int32 {
	if x != nil {
		return x.TokenCount
	}
	return 0
}

type WorkspaceContext struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	PreviousChapters []*ChapterSummary      `protobuf:"bytes,1,rep,name=previous_chapters,json=previousChapters,proto3" json:"previous_chapters,omitempty"`
	ActiveCharacters []*CharacterInfo       `protobuf:"bytes,2,rep,name=active_characters,json=activeCharacters,proto3" json:"active_characters,omitempty"`
	TimelineEvents   []*TimelineEvent       `protobuf:"bytes,3,rep,name=timeline_events,json=timelineEvents,proto3" json:"timeline_events,omitempty"`
	OutlineNodes     []*OutlineNode         `protobuf:"bytes,4,rep,name=outline_nodes,json=outlineNodes,proto3" json:"outline_nodes,omitempty"`
	WorldSettings    *WorldSettings         `protobuf:"bytes,5,opt,name=world_settings,json=worldSettings,proto3" json:"world_settings,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *WorkspaceContext) Reset() {
	*x = WorkspaceContext{}
	mi := &file_ai_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkspaceContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkspaceContext) ProtoMessage() {}

func (x *WorkspaceContext) ProtoReflect() protoreflect.Message {
	mi := &file_ai_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkspaceContext.ProtoReflect.Descriptor instead.
func (*WorkspaceContext) Descriptor() ([]byte, []int) {
	return file_ai_service_proto_rawDescGZIP(), []int{9}
}

func (x *WorkspaceContext) GetPreviousChapters() []*ChapterSummary {
	if x != nil {
		return x.PreviousChapters
	}
	return nil
}

func (x *WorkspaceContext) GetActiveCharacters() []*CharacterInfo {
	if x != nil {
		return x.ActiveCharacters
	}
	return nil
}

func (x *WorkspaceContext) GetTimelineEvents() []*TimelineEvent {
	if x != nil {
		return x.TimelineEvents
	}
	return nil
}

func (x *WorkspaceContext) GetOutlineNodes() []*OutlineNode {
	if x != nil {
		return x.OutlineNodes
	}
	return nil
}

func (x *WorkspaceContext) GetWorldSettings() *WorldSettings {
	if x != nil {
		return x.WorldSettings
	}
	return nil
}

type ChapterSummary struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Summary       string                 `protobuf:"bytes,3,opt,name=summary,proto3" json:"summary,omitempty"`
	Order         int32                  `protobuf:"varint,4,opt,name=order,proto3" json:"order,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChapterSummary) Reset() {
	*x = ChapterSummary{}
	mi := &file_ai_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChapterSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChapterSummary) ProtoMessage() {}

func (x *ChapterSummary) ProtoReflect() protoreflect.Message {
	mi := &file_ai_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChapterSummary.ProtoReflect.Descriptor instead.
func (*ChapterSummary) Descriptor() ([]byte, []int) {
	return file_ai_service_proto_rawDescGZIP(), []int{10}
}

func (x *ChapterSummary) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ChapterSummary) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ChapterSummary) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *ChapterSummary) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

type CharacterInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Alias         []string               `protobuf:"bytes,3,rep,name=alias,proto3" json:"alias,omitempty"`
	Summary       string                 `protobuf:"bytes,4,opt,name=summary,proto3" json:"summary,omitempty"`
	Traits        []string               `protobuf:"bytes,5,rep,name=traits,proto3" json:"traits,omitempty"`
	Background    string                 `protobuf:"bytes,6,opt,name=background,proto3" json:"background,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CharacterInfo) Reset() {
	*x = CharacterInfo{}
	mi := &file_ai_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CharacterInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharacterInfo) ProtoMessage() {}

func (x *CharacterInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ai_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharacterInfo.ProtoReflect.Descriptor instead.
func (*CharacterInfo) Descriptor() ([]byte, []int) {
	return file_ai_service_proto_rawDescGZIP(), []int{11}
}

func (x *CharacterInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CharacterInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CharacterInfo) GetAlias() []string {
	if x != nil {
		return x.Alias
	}
	return nil
}

func (x *CharacterInfo) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *CharacterInfo) GetTraits() []string {
	if x != nil {
		return x.Traits
	}
	return nil
}

func (x *CharacterInfo) GetBackground() string {
	if x != nil {
		return x.Background
	}
	return ""
}

type TimelineEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Impact        string                 `protobuf:"bytes,4,opt,name=impact,proto3" json:"impact,omitempty"`
	Participants  []string               `protobuf:"bytes,5,rep,name=participants,proto3" json:"participants,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TimelineEvent) Reset() {
	*x = TimelineEvent{}
	mi := &file_ai_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimelineEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimelineEvent) ProtoMessage() {}

func (x *TimelineEvent) ProtoReflect() protoreflect.Message {
	mi := &file_ai_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimelineEvent.ProtoReflect.Descriptor instead.
func (*TimelineEvent) Descriptor() ([]byte, []int) {
	return file_ai_service_proto_rawDescGZIP(), []int{12}
}

func (x *TimelineEvent) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TimelineEvent) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *TimelineEvent) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *TimelineEvent) GetImpact() string {
	if x != nil {
		return x.Impact
	}
	return ""
}

func (x *TimelineEvent) GetParticipants() []string {
	if x != nil {
		return x.Participants
	}
	return nil
}

type OutlineNode struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Level         int32                  `protobuf:"varint,4,opt,name=level,proto3" json:"level,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OutlineNode) Reset() {
	*x = OutlineNode{}
	mi := &file_ai_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OutlineNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OutlineNode) ProtoMessage() {}

func (x *OutlineNode) ProtoReflect() protoreflect.Message {
	mi := &file_ai_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OutlineNode.ProtoReflect.Descriptor instead.
func (*OutlineNode) Descriptor() ([]byte, []int) {
	return file_ai_service_proto_rawDescGZIP(), []int{13}
}

func (x *OutlineNode) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OutlineNode) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *OutlineNode) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *OutlineNode) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

type WorldSettings struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Settings      map[string]string      `protobuf:"bytes,4,rep,name=settings,proto3" json:"settings,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorldSettings) Reset() {
	*x = WorldSettings{}
	mi := &file_ai_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorldSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorldSettings) ProtoMessage() {}

func (x *WorldSettings) ProtoReflect() protoreflect.Message {
	mi := &file_ai_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorldSettings.ProtoReflect.Descriptor instead.
func (*WorldSettings) Descriptor() ([]byte, []int) {
	return file_ai_service_proto_rawDescGZIP(), []int{14}
}

func (x *WorldSettings) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *WorldSettings) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WorldSettings) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *WorldSettings) GetSettings() map[string]string {
	if x != nil {
		return x.Settings
	}
	return nil
}

type AgentExecutionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkflowType  string                 `protobuf:"bytes,1,opt,name=workflow_type,json=workflowType,proto3" json:"workflow_type,omitempty"` // a2a_pipeline, outline_generation, etc.
	ProjectId     string                 `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Parameters    map[string]string      `protobuf:"bytes,3,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AgentExecutionRequest) Reset() {
	*x = AgentExecutionRequest{}
	mi := &file_ai_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AgentExecutionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentExecutionRequest) ProtoMessage() {}

func (x *AgentExecutionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ai_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentExecutionRequest.ProtoReflect.Descriptor instead.
func (*AgentExecutionRequest) Descriptor() ([]byte, []int) {
	return file_ai_service_proto_rawDescGZIP(), []int{15}
}

func (x *AgentExecutionRequest) GetWorkflowType() string {
	if x != nil {
		return x.WorkflowType
	}
	return ""
}

func (x *AgentExecutionRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *AgentExecutionRequest) GetParameters() map[string]string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

type AgentExecutionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ExecutionId   string                 `protobuf:"bytes,1,opt,name=execution_id,json=executionId,proto3" json:"execution_id,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"` // running, completed, failed
	Result        string                 `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"` // JSON 格式的结果
	Errors        []string               `protobuf:"bytes,4,rep,name=errors,proto3" json:"errors,omitempty"`
	TokensUsed    int32                  `protobuf:"varint,5,opt,name=tokens_used,json=tokensUsed,proto3" json:"tokens_used,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AgentExecutionResponse) Reset() {
	*x = AgentExecutionResponse{}
	mi := &file_ai_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AgentExecutionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentExecutionResponse) ProtoMessage() {}

func (x *AgentExecutionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ai_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentExecutionResponse.ProtoReflect.Descriptor instead.
func (*AgentExecutionResponse) Descriptor() ([]byte, []int) {
	return file_ai_service_proto_rawDescGZIP(), []int{16}
}

func (x *AgentExecutionResponse) GetExecutionId() string {
	if x != nil {
		return x.ExecutionId
	}
	return ""
}

func (x *AgentExecutionResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *AgentExecutionResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

func (x *AgentExecutionResponse) GetErrors() []string {
	if x != nil {
		return x.Errors
	}
	return nil
}

func (x *AgentExecutionResponse) GetTokensUsed() int32 {
	if x != nil {
		return x.TokensUsed
	}
	return 0
}

type EmbedRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Texts         []string               `protobuf:"bytes,1,rep,name=texts,proto3" json:"texts,omitempty"`
	Model         string                 `protobuf:"bytes,2,opt,name=model,proto3" json:"model,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EmbedRequest) Reset() {
	*x = EmbedRequest{}
	mi := &file_ai_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmbedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmbedRequest) ProtoMessage() {}

func (x *EmbedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ai_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmbedRequest.ProtoReflect.Descriptor instead.
func (*EmbedRequest) Descriptor() ([]byte, []int) {
	return file_ai_service_proto_rawDescGZIP(), []int{17}
}

func (x *EmbedRequest) GetTexts() []string {
	if x != nil {
		return x.Texts
	}
	return nil
}

func (x *EmbedRequest) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

type EmbedResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Embeddings    []*Embedding           `protobuf:"bytes,1,rep,name=embeddings,proto3" json:"embeddings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EmbedResponse) Reset() {
	*x = EmbedResponse{}
	mi := &file_ai_service_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmbedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmbedResponse) ProtoMessage() {}

func (x *EmbedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ai_service_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmbedResponse.ProtoReflect.Descriptor instead.
func (*EmbedResponse) Descriptor() ([]byte, []int) {
	return file_ai_service_proto_rawDescGZIP(), []int{18}
}

func (x *EmbedResponse) GetEmbeddings() []*Embedding {
	if x != nil {
		return x.Embeddings
	}
	return nil
}

type Embedding struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Vector        []float32              `protobuf:"fixed32,1,rep,packed,name=vector,proto3" json:"vector,omitempty"`
	Dimension     int32                  `protobuf:"varint,2,opt,name=dimension,proto3" json:"dimension,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Embedding) Reset() {
	*x = Embedding{}
	mi := &file_ai_service_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Embedding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Embedding) ProtoMessage() {}

func (x *Embedding) ProtoReflect() protoreflect.Message {
	mi := &file_ai_service_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Embedding.ProtoReflect.Descriptor instead.
func (*Embedding) Descriptor() ([]byte, []int) {
	return file_ai_service_proto_rawDescGZIP(), []int{19}
}

func (x *Embedding) GetVector() []float32 {
	if x != nil {
		return x.Vector
	}
	return nil
}

func (x *Embedding) GetDimension() int32 {
	if x != nil {
		return x.Dimension
	}
	return 0
}

type CreativeWorkflowRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Task              string                 `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	UserId            string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ProjectId         string                 `protobuf:"bytes,3,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	MaxReflections    int32                  `protobuf:"varint,4,opt,name=max_reflections,json=maxReflections,proto3" json:"max_reflections,omitempty"`                                                                                // 最大反思次数，默认3
	EnableHumanReview bool                   `protobuf:"varint,5,opt,name=enable_human_review,json=enableHumanReview,proto3" json:"enable_human_review,omitempty"`                                                                     // 是否启用人工审核
	WorkspaceContext  map[string]string      `protobuf:"bytes,6,rep,name=workspace_context,json=workspaceContext,proto3" json:"workspace_context,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 可选的工作区上下文
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *CreativeWorkflowRequest) Reset() {
	*x = CreativeWorkflowRequest{}
	mi := &file_ai_service_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreativeWorkflowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreativeWorkflowRequest) ProtoMessage() {}

func (x *CreativeWorkflowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ai_service_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreativeWorkflowRequest.ProtoReflect.Descriptor instead.
func (*CreativeWorkflowRequest) Descriptor() ([]byte, []int) {
	return file_ai_service_proto_rawDescGZIP(), []int{20}
}

func (x *CreativeWorkflowRequest) GetTask() string {
	if x != nil {
		return x.Task
	}
	return ""
}

func (x *CreativeWorkflowRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreativeWorkflowRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *CreativeWorkflowRequest) GetMaxReflections() int32 {
	if x != nil {
		return x.MaxReflections
	}
	return 0
}

func (x *CreativeWorkflowRequest) GetEnableHumanReview() bool {
	if x != nil {
		return x.EnableHumanReview
	}
	return false
}

func (x *CreativeWorkflowRequest) GetWorkspaceContext() map[string]string {
	if x != nil {
		return x.WorkspaceContext
	}
	return nil
}

type CreativeWorkflowResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ExecutionId      string                 `protobuf:"bytes,1,opt,name=execution_id,json=executionId,proto3" json:"execution_id,omitempty"`
	ReviewPassed     bool                   `protobuf:"varint,2,opt,name=review_passed,json=reviewPassed,proto3" json:"review_passed,omitempty"`
	ReflectionCount  int32                  `protobuf:"varint,3,opt,name=reflection_count,json=reflectionCount,proto3" json:"reflection_count,omitempty"`
	Outline          *OutlineData           `protobuf:"bytes,4,opt,name=outline,proto3" json:"outline,omitempty"`
	Characters       *CharactersData        `protobuf:"bytes,5,opt,name=characters,proto3" json:"characters,omitempty"`
	Plot             *PlotData              `protobuf:"bytes,6,opt,name=plot,proto3" json:"plot,omitempty"`
	DiagnosticReport *DiagnosticReportData  `protobuf:"bytes,7,opt,name=diagnostic_report,json=diagnosticReport,proto3" json:"diagnostic_report,omitempty"`
	Reasoning        []string               `protobuf:"bytes,8,rep,name=reasoning,proto3" json:"reasoning,omitempty"`
	ExecutionTimes   map[string]float32     `protobuf:"bytes,9,rep,name=execution_times,json=executionTimes,proto3" json:"execution_times,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed32,2,opt,name=value"`
	TokensUsed       int32                  `protobuf:"varint,10,opt,name=tokens_used,json=tokensUsed,proto3" json:"tokens_used,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CreativeWorkflowResponse) Reset() {
	*x = CreativeWorkflowResponse{}
	mi := &file_ai_service_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreativeWorkflowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreativeWorkflowResponse) ProtoMessage() {}

func (x *CreativeWorkflowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ai_service_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreativeWorkflowResponse.ProtoReflect.Descriptor instead.
func (*CreativeWorkflowResponse) Descriptor() ([]byte, []int) {
	return file_ai_service_proto_rawDescGZIP(), []int{21}
}

func (x *CreativeWorkflowResponse) GetExecutionId() string {
	if x != nil {
		return x.ExecutionId
	}
	return ""
}

func (x *CreativeWorkflowResponse) GetReviewPassed() bool {
	if x != nil {
		return x.ReviewPassed
	}
	return false
}

func (x *CreativeWorkflowResponse) GetReflectionCount() int32 {
	if x != nil {
		return x.ReflectionCount
	}
	return 0
}

func (x *CreativeWorkflowResponse) GetOutline() *OutlineData {
	if x != nil {
		return x.Outline
	}
	return nil
}

func (x *CreativeWorkflowResponse) GetCharacters() *CharactersData {
	if x != nil {
		return x.Characters
	}
	return nil
}

func (x *CreativeWorkflowResponse) GetPlot() *PlotData {
	if x != nil {
		return x.Plot
	}
	return nil
}

func (x *CreativeWorkflowResponse) GetDiagnosticReport() *DiagnosticReportData {
	if x != nil {
		return x.DiagnosticReport
	}
	return nil
}

func (x *CreativeWorkflowResponse) GetReasoning() []string {
	if x != nil {
		return x.Reasoning
	}
	return nil
}

func (x *CreativeWorkflowResponse) GetExecutionTimes() map[string]float32 {
	if x != nil {
		return x.ExecutionTimes
	}
	return nil
}

func (x *CreativeWorkflowResponse) GetTokensUsed() int32 {
	if x != nil {
		return x.TokensUsed
	}
	return 0
}

type OutlineRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Task             string                 `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	UserId           string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ProjectId        string                 `protobuf:"bytes,3,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	WorkspaceContext map[string]string      `protobuf:"bytes,4,rep,name=workspace_context,json=workspaceContext,proto3" json:"workspace_context,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	CorrectionPrompt string                 `protobuf:"bytes,5,opt,name=correction_prompt,json=correctionPrompt,proto3" json:"correction_prompt,omitempty"` // 可选的修正提示
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *OutlineRequest) Reset() {
	*x = OutlineRequest{}
	mi := &file_ai_service_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OutlineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OutlineRequest) ProtoMessage() {}

func (x *OutlineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ai_service_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OutlineRequest.ProtoReflect.Descriptor instead.
func (*OutlineRequest) Descriptor() ([]byte, []int) {
	return file_ai_service_proto_rawDescGZIP(), []int{22}
}

func (x *OutlineRequest) GetTask() string {
	if x != nil {
		return x.Task
	}
	return ""
}

func (x *OutlineRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *OutlineRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *OutlineRequest) GetWorkspaceContext() map[string]string {
	if x != nil {
		return x.WorkspaceContext
	}
	return nil
}

func (x *OutlineRequest) GetCorrectionPrompt() string {
	if x != nil {
		return x.CorrectionPrompt
	}
	return ""
}

type OutlineResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Outline       *OutlineData           `protobuf:"bytes,1,opt,name=outline,proto3" json:"outline,omitempty"`
	ExecutionTime float32                `protobuf:"fixed32,2,opt,name=execution_time,json=executionTime,proto3" json:"execution_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OutlineResponse) Reset() {
	*x = OutlineResponse{}
	mi := &file_ai_service_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OutlineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OutlineResponse) ProtoMessage() {}

func (x *OutlineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ai_service_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OutlineResponse.ProtoReflect.Descriptor instead.
func (*OutlineResponse) Descriptor() ([]byte, []int) {
	return file_ai_service_proto_rawDescGZIP(), []int{23}
}

func (x *OutlineResponse) GetOutline() *OutlineData {
	if x != nil {
		return x.Outline
	}
	return nil
}

func (x *OutlineResponse) GetExecutionTime() float32 {
	if x != nil {
		return x.ExecutionTime
	}
	return 0
}

type OutlineData struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Title               string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Genre               string                 `protobuf:"bytes,2,opt,name=genre,proto3" json:"genre,omitempty"`
	CoreTheme           string                 `protobuf:"bytes,3,opt,name=core_theme,json=coreTheme,proto3" json:"core_theme,omitempty"`
	TargetAudience      string                 `protobuf:"bytes,4,opt,name=target_audience,json=targetAudience,proto3" json:"target_audience,omitempty"`
	EstimatedTotalWords int32                  `protobuf:"varint,5,opt,name=estimated_total_words,json=estimatedTotalWords,proto3" json:"estimated_total_words,omitempty"`
	Chapters            []*ChapterData         `protobuf:"bytes,6,rep,name=chapters,proto3" json:"chapters,omitempty"`
	StoryArc            *StoryArc              `protobuf:"bytes,7,opt,name=story_arc,json=storyArc,proto3" json:"story_arc,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *OutlineData) Reset() {
	*x = OutlineData{}
	mi := &file_ai_service_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OutlineData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OutlineData) ProtoMessage() {}

func (x *OutlineData) ProtoReflect() protoreflect.Message {
	mi := &file_ai_service_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OutlineData.ProtoReflect.Descriptor instead.
func (*OutlineData) Descriptor() ([]byte, []int) {
	return file_ai_service_proto_rawDescGZIP(), []int{24}
}

func (x *OutlineData) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *OutlineData) GetGenre() string {
	if x != nil {
		return x.Genre
	}
	return ""
}

func (x *OutlineData) GetCoreTheme() string {
	if x != nil {
		return x.CoreTheme
	}
	return ""
}

func (x *OutlineData) GetTargetAudience() string {
	if x != nil {
		return x.TargetAudience
	}
	return ""
}

func (x *OutlineData) GetEstimatedTotalWords() int32 {
	if x != nil {
		return x.EstimatedTotalWords
	}
	return 0
}

func (x *OutlineData) GetChapters() []*ChapterData {
	if x != nil {
		return x.Chapters
	}
	return nil
}

func (x *OutlineData) GetStoryArc() *StoryArc {
	if x != nil {
		return x.StoryArc
	}
	return nil
}

type ChapterData struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	ChapterId          int32                  `protobuf:"varint,1,opt,name=chapter_id,json=chapterId,proto3" json:"chapter_id,omitempty"`
	Title              string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Summary            string                 `protobuf:"bytes,3,opt,name=summary,proto3" json:"summary,omitempty"`
	KeyEvents          []string               `protobuf:"bytes,4,rep,name=key_events,json=keyEvents,proto3" json:"key_events,omitempty"`
	CharactersInvolved []string               `protobuf:"bytes,5,rep,name=characters_involved,json=charactersInvolved,proto3" json:"characters_involved,omitempty"`
	ConflictType       string                 `protobuf:"bytes,6,opt,name=conflict_type,json=conflictType,proto3" json:"conflict_type,omitempty"`
	EmotionalTone      string                 `protobuf:"bytes,7,opt,name=emotional_tone,json=emotionalTone,proto3" json:"emotional_tone,omitempty"`
	EstimatedWordCount int32                  `protobuf:"varint,8,opt,name=estimated_word_count,json=estimatedWordCount,proto3" json:"estimated_word_count,omitempty"`
	ChapterGoal        string                 `protobuf:"bytes,9,opt,name=chapter_goal,json=chapterGoal,proto3" json:"chapter_goal,omitempty"`
	Cliffhanger        string                 `protobuf:"bytes,10,opt,name=cliffhanger,proto3" json:"cliffhanger,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ChapterData) Reset() {
	*x = ChapterData{}
	mi := &file_ai_service_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChapterData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChapterData) ProtoMessage() {}

func (x *ChapterData) ProtoReflect() protoreflect.Message {
	mi := &file_ai_service_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChapterData.ProtoReflect.Descriptor instead.
func (*ChapterData) Descriptor() ([]byte, []int) {
	return file_ai_service_proto_rawDescGZIP(), []int{25}
}

func (x *ChapterData) GetChapterId() int32 {
	if x != nil {
		return x.ChapterId
	}
	return 0
}

func (x *ChapterData) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ChapterData) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *ChapterData) GetKeyEvents() []string {
	if x != nil {
		return x.KeyEvents
	}
	return nil
}

func (x *ChapterData) GetCharactersInvolved() []string {
	if x != nil {
		return x.CharactersInvolved
	}
	return nil
}

func (x *ChapterData) GetConflictType() string {
	if x != nil {
		return x.ConflictType
	}
	return ""
}

func (x *ChapterData) GetEmotionalTone() string {
	if x != nil {
		return x.EmotionalTone
	}
	return ""
}

func (x *ChapterData) GetEstimatedWordCount() int32 {
	if x != nil {
		return x.EstimatedWordCount
	}
	return 0
}

func (x *ChapterData) GetChapterGoal() string {
	if x != nil {
		return x.ChapterGoal
	}
	return ""
}

func (x *ChapterData) GetCliffhanger() string {
	if x != nil {
		return x.Cliffhanger
	}
	return ""
}

type StoryArc struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Setup         []int32                `protobuf:"varint,1,rep,packed,name=setup,proto3" json:"setup,omitempty"`
	RisingAction  []int32                `protobuf:"varint,2,rep,packed,name=rising_action,json=risingAction,proto3" json:"rising_action,omitempty"`
	Climax        []int32                `protobuf:"varint,3,rep,packed,name=climax,proto3" json:"climax,omitempty"`
	FallingAction []int32                `protobuf:"varint,4,rep,packed,name=falling_action,json=fallingAction,proto3" json:"falling_action,omitempty"`
	Resolution    []int32                `protobuf:"varint,5,rep,packed,name=resolution,proto3" json:"resolution,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoryArc) Reset() {
	*x = StoryArc{}
	mi := &file_ai_service_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoryArc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoryArc) ProtoMessage() {}

func (x *StoryArc) ProtoReflect() protoreflect.Message {
	mi := &file_ai_service_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoryArc.ProtoReflect.Descriptor instead.
func (*StoryArc) Descriptor() ([]byte, []int) {
	return file_ai_service_proto_rawDescGZIP(), []int{26}
}

func (x *StoryArc) GetSetup() []int32 {
	if x != nil {
		return x.Setup
	}
	return nil
}

func (x *StoryArc) GetRisingAction() []int32 {
	if x != nil {
		return x.RisingAction
	}
	return nil
}

func (x *StoryArc) GetClimax() []int32 {
	if x != nil {
		return x.Climax
	}
	return nil
}

func (x *StoryArc) GetFallingAction() []int32 {
	if x != nil {
		return x.FallingAction
	}
	return nil
}

func (x *StoryArc) GetResolution() []int32 {
	if x != nil {
		return x.Resolution
	}
	return nil
}

type CharactersRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Task             string                 `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	UserId           string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ProjectId        string                 `protobuf:"bytes,3,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Outline          *OutlineData           `protobuf:"bytes,4,opt,name=outline,proto3" json:"outline,omitempty"` // 大纲信息
	WorkspaceContext map[string]string      `protobuf:"bytes,5,rep,name=workspace_context,json=workspaceContext,proto3" json:"workspace_context,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	CorrectionPrompt string                 `protobuf:"bytes,6,opt,name=correction_prompt,json=correctionPrompt,proto3" json:"correction_prompt,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CharactersRequest) Reset() {
	*x = CharactersRequest{}
	mi := &file_ai_service_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CharactersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharactersRequest) ProtoMessage() {}

func (x *CharactersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ai_service_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharactersRequest.ProtoReflect.Descriptor instead.
func (*CharactersRequest) Descriptor() ([]byte, []int) {
	return file_ai_service_proto_rawDescGZIP(), []int{27}
}

func (x *CharactersRequest) GetTask() string {
	if x != nil {
		return x.Task
	}
	return ""
}

func (x *CharactersRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CharactersRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *CharactersRequest) GetOutline() *OutlineData {
	if x != nil {
		return x.Outline
	}
	return nil
}

func (x *CharactersRequest) GetWorkspaceContext() map[string]string {
	if x != nil {
		return x.WorkspaceContext
	}
	return nil
}

func (x *CharactersRequest) GetCorrectionPrompt() string {
	if x != nil {
		return x.CorrectionPrompt
	}
	return ""
}

type CharactersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Characters    *CharactersData        `protobuf:"bytes,1,opt,name=characters,proto3" json:"characters,omitempty"`
	ExecutionTime float32                `protobuf:"fixed32,2,opt,name=execution_time,json=executionTime,proto3" json:"execution_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CharactersResponse) Reset() {
	*x = CharactersResponse{}
	mi := &file_ai_service_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CharactersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharactersResponse) ProtoMessage() {}

func (x *CharactersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ai_service_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharactersResponse.ProtoReflect.Descriptor instead.
func (*CharactersResponse) Descriptor() ([]byte, []int) {
	return file_ai_service_proto_rawDescGZIP(), []int{28}
}

func (x *CharactersResponse) GetCharacters() *CharactersData {
	if x != nil {
		return x.Characters
	}
	return nil
}

func (x *CharactersResponse) GetExecutionTime() float32 {
	if x != nil {
		return x.ExecutionTime
	}
	return 0
}

type CharactersData struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Characters          []*CharacterData       `protobuf:"bytes,1,rep,name=characters,proto3" json:"characters,omitempty"`
	RelationshipNetwork *RelationshipNetwork   `protobuf:"bytes,2,opt,name=relationship_network,json=relationshipNetwork,proto3" json:"relationship_network,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *CharactersData) Reset() {
	*x = CharactersData{}
	mi := &file_ai_service_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CharactersData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharactersData) ProtoMessage() {}

func (x *CharactersData) ProtoReflect() protoreflect.Message {
	mi := &file_ai_service_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharactersData.ProtoReflect.Descriptor instead.
func (*CharactersData) Descriptor() ([]byte, []int) {
	return file_ai_service_proto_rawDescGZIP(), []int{29}
}

func (x *CharactersData) GetCharacters() []*CharacterData {
	if x != nil {
		return x.Characters
	}
	return nil
}

func (x *CharactersData) GetRelationshipNetwork() *RelationshipNetwork {
	if x != nil {
		return x.RelationshipNetwork
	}
	return nil
}

type CharacterData struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	CharacterId      string                 `protobuf:"bytes,1,opt,name=character_id,json=characterId,proto3" json:"character_id,omitempty"`
	Name             string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	RoleType         string                 `protobuf:"bytes,3,opt,name=role_type,json=roleType,proto3" json:"role_type,omitempty"` // protagonist, antagonist, supporting
	Importance       string                 `protobuf:"bytes,4,opt,name=importance,proto3" json:"importance,omitempty"`             // major, minor
	Age              int32                  `protobuf:"varint,5,opt,name=age,proto3" json:"age,omitempty"`
	Gender           string                 `protobuf:"bytes,6,opt,name=gender,proto3" json:"gender,omitempty"`
	Appearance       string                 `protobuf:"bytes,7,opt,name=appearance,proto3" json:"appearance,omitempty"`
	Personality      *PersonalityData       `protobuf:"bytes,8,opt,name=personality,proto3" json:"personality,omitempty"`
	Background       *BackgroundData        `protobuf:"bytes,9,opt,name=background,proto3" json:"background,omitempty"`
	Motivation       string                 `protobuf:"bytes,10,opt,name=motivation,proto3" json:"motivation,omitempty"`
	Relationships    []*RelationshipData    `protobuf:"bytes,11,rep,name=relationships,proto3" json:"relationships,omitempty"`
	DevelopmentArc   *DevelopmentArc        `protobuf:"bytes,12,opt,name=development_arc,json=developmentArc,proto3" json:"development_arc,omitempty"`
	RoleInStory      string                 `protobuf:"bytes,13,opt,name=role_in_story,json=roleInStory,proto3" json:"role_in_story,omitempty"`
	FirstAppearance  int32                  `protobuf:"varint,14,opt,name=first_appearance,json=firstAppearance,proto3" json:"first_appearance,omitempty"`
	ChaptersInvolved []int32                `protobuf:"varint,15,rep,packed,name=chapters_involved,json=chaptersInvolved,proto3" json:"chapters_involved,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CharacterData) Reset() {
	*x = CharacterData{}
	mi := &file_ai_service_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CharacterData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharacterData) ProtoMessage() {}

func (x *CharacterData) ProtoReflect() protoreflect.Message {
	mi := &file_ai_service_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharacterData.ProtoReflect.Descriptor instead.
func (*CharacterData) Descriptor() ([]byte, []int) {
	return file_ai_service_proto_rawDescGZIP(), []int{30}
}

func (x *CharacterData) GetCharacterId() string {
	if x != nil {
		return x.CharacterId
	}
	return ""
}

func (x *CharacterData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CharacterData) GetRoleType() string {
	if x != nil {
		return x.RoleType
	}
	return ""
}

func (x *CharacterData) GetImportance() string {
	if x != nil {
		return x.Importance
	}
	return ""
}

func (x *CharacterData) GetAge() int32 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *CharacterData) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *CharacterData) GetAppearance() string {
	if x != nil {
		return x.Appearance
	}
	return ""
}

func (x *CharacterData) GetPersonality() *PersonalityData {
	if x != nil {
		return x.Personality
	}
	return nil
}

func (x *CharacterData) GetBackground() *BackgroundData {
	if x != nil {
		return x.Background
	}
	return nil
}

func (x *CharacterData) GetMotivation() string {
	if x != nil {
		return x.Motivation
	}
	return ""
}

func (x *CharacterData) GetRelationships() []*RelationshipData {
	if x != nil {
		return x.Relationships
	}
	return nil
}

func (x *CharacterData) GetDevelopmentArc() *DevelopmentArc {
	if x != nil {
		return x.DevelopmentArc
	}
	return nil
}

func (x *CharacterData) GetRoleInStory() string {
	if x != nil {
		return x.RoleInStory
	}
	return ""
}

func (x *CharacterData) GetFirstAppearance() int32 {
	if x != nil {
		return x.FirstAppearance
	}
	return 0
}

func (x *CharacterData) GetChaptersInvolved() []int32 {
	if x != nil {
		return x.ChaptersInvolved
	}
	return nil
}

type PersonalityData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Traits        []string               `protobuf:"bytes,1,rep,name=traits,proto3" json:"traits,omitempty"`
	Strengths     []string               `protobuf:"bytes,2,rep,name=strengths,proto3" json:"strengths,omitempty"`
	Weaknesses    []string               `protobuf:"bytes,3,rep,name=weaknesses,proto3" json:"weaknesses,omitempty"`
	CoreValues    string                 `protobuf:"bytes,4,opt,name=core_values,json=coreValues,proto3" json:"core_values,omitempty"`
	Fears         string                 `protobuf:"bytes,5,opt,name=fears,proto3" json:"fears,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PersonalityData) Reset() {
	*x = PersonalityData{}
	mi := &file_ai_service_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PersonalityData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PersonalityData) ProtoMessage() {}

func (x *PersonalityData) ProtoReflect() protoreflect.Message {
	mi := &file_ai_service_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PersonalityData.ProtoReflect.Descriptor instead.
func (*PersonalityData) Descriptor() ([]byte, []int) {
	return file_ai_service_proto_rawDescGZIP(), []int{31}
}

func (x *PersonalityData) GetTraits() []string {
	if x != nil {
		return x.Traits
	}
	return nil
}

func (x *PersonalityData) GetStrengths() []string {
	if x != nil {
		return x.Strengths
	}
	return nil
}

func (x *PersonalityData) GetWeaknesses() []string {
	if x != nil {
		return x.Weaknesses
	}
	return nil
}

func (x *PersonalityData) GetCoreValues() string {
	if x != nil {
		return x.CoreValues
	}
	return ""
}

func (x *PersonalityData) GetFears() string {
	if x != nil {
		return x.Fears
	}
	return ""
}

type BackgroundData struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Summary        string                 `protobuf:"bytes,1,opt,name=summary,proto3" json:"summary,omitempty"`
	Family         string                 `protobuf:"bytes,2,opt,name=family,proto3" json:"family,omitempty"`
	Education      string                 `protobuf:"bytes,3,opt,name=education,proto3" json:"education,omitempty"`
	KeyExperiences []string               `protobuf:"bytes,4,rep,name=key_experiences,json=keyExperiences,proto3" json:"key_experiences,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *BackgroundData) Reset() {
	*x = BackgroundData{}
	mi := &file_ai_service_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BackgroundData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackgroundData) ProtoMessage() {}

func (x *BackgroundData) ProtoReflect() protoreflect.Message {
	mi := &file_ai_service_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackgroundData.ProtoReflect.Descriptor instead.
func (*BackgroundData) Descriptor() ([]byte, []int) {
	return file_ai_service_proto_rawDescGZIP(), []int{32}
}

func (x *BackgroundData) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *BackgroundData) GetFamily() string {
	if x != nil {
		return x.Family
	}
	return ""
}

func (x *BackgroundData) GetEducation() string {
	if x != nil {
		return x.Education
	}
	return ""
}

func (x *BackgroundData) GetKeyExperiences() []string {
	if x != nil {
		return x.KeyExperiences
	}
	return nil
}

type RelationshipData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Character     string                 `protobuf:"bytes,1,opt,name=character,proto3" json:"character,omitempty"`
	RelationType  string                 `protobuf:"bytes,2,opt,name=relation_type,json=relationType,proto3" json:"relation_type,omitempty"` // friend, enemy, family, mentor, rival
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Dynamics      string                 `protobuf:"bytes,4,opt,name=dynamics,proto3" json:"dynamics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RelationshipData) Reset() {
	*x = RelationshipData{}
	mi := &file_ai_service_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RelationshipData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelationshipData) ProtoMessage() {}

func (x *RelationshipData) ProtoReflect() protoreflect.Message {
	mi := &file_ai_service_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelationshipData.ProtoReflect.Descriptor instead.
func (*RelationshipData) Descriptor() ([]byte, []int) {
	return file_ai_service_proto_rawDescGZIP(), []int{33}
}

func (x *RelationshipData) GetCharacter() string {
	if x != nil {
		return x.Character
	}
	return ""
}

func (x *RelationshipData) GetRelationType() string {
	if x != nil {
		return x.RelationType
	}
	return ""
}

func (x *RelationshipData) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *RelationshipData) GetDynamics() string {
	if x != nil {
		return x.Dynamics
	}
	return ""
}

type DevelopmentArc struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StartingPoint string                 `protobuf:"bytes,1,opt,name=starting_point,json=startingPoint,proto3" json:"starting_point,omitempty"`
	TurningPoints []string               `protobuf:"bytes,2,rep,name=turning_points,json=turningPoints,proto3" json:"turning_points,omitempty"`
	EndingPoint   string                 `protobuf:"bytes,3,opt,name=ending_point,json=endingPoint,proto3" json:"ending_point,omitempty"`
	GrowthTheme   string                 `protobuf:"bytes,4,opt,name=growth_theme,json=growthTheme,proto3" json:"growth_theme,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DevelopmentArc) Reset() {
	*x = DevelopmentArc{}
	mi := &file_ai_service_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DevelopmentArc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DevelopmentArc) ProtoMessage() {}

func (x *DevelopmentArc) ProtoReflect() protoreflect.Message {
	mi := &file_ai_service_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DevelopmentArc.ProtoReflect.Descriptor instead.
func (*DevelopmentArc) Descriptor() ([]byte, []int) {
	return file_ai_service_proto_rawDescGZIP(), []int{34}
}

func (x *DevelopmentArc) GetStartingPoint() string {
	if x != nil {
		return x.StartingPoint
	}
	return ""
}

func (x *DevelopmentArc) GetTurningPoints() []string {
	if x != nil {
		return x.TurningPoints
	}
	return nil
}

func (x *DevelopmentArc) GetEndingPoint() string {
	if x != nil {
		return x.EndingPoint
	}
	return ""
}

func (x *DevelopmentArc) GetGrowthTheme() string {
	if x != nil {
		return x.GrowthTheme
	}
	return ""
}

type RelationshipNetwork struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Alliances     []*Alliance            `protobuf:"bytes,1,rep,name=alliances,proto3" json:"alliances,omitempty"`
	Conflicts     []*Conflict            `protobuf:"bytes,2,rep,name=conflicts,proto3" json:"conflicts,omitempty"`
	Mentorships   []*Mentorship          `protobuf:"bytes,3,rep,name=mentorships,proto3" json:"mentorships,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RelationshipNetwork) Reset() {
	*x = RelationshipNetwork{}
	mi := &file_ai_service_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RelationshipNetwork) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelationshipNetwork) ProtoMessage() {}

func (x *RelationshipNetwork) ProtoReflect() protoreflect.Message {
	mi := &file_ai_service_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelationshipNetwork.ProtoReflect.Descriptor instead.
func (*RelationshipNetwork) Descriptor() ([]byte, []int) {
	return file_ai_service_proto_rawDescGZIP(), []int{35}
}

func (x *RelationshipNetwork) GetAlliances() []*Alliance {
	if x != nil {
		return x.Alliances
	}
	return nil
}

func (x *RelationshipNetwork) GetConflicts() []*Conflict {
	if x != nil {
		return x.Conflicts
	}
	return nil
}

func (x *RelationshipNetwork) GetMentorships() []*Mentorship {
	if x != nil {
		return x.Mentorships
	}
	return nil
}

type Alliance struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Members       []string               `protobuf:"bytes,1,rep,name=members,proto3" json:"members,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Alliance) Reset() {
	*x = Alliance{}
	mi := &file_ai_service_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Alliance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Alliance) ProtoMessage() {}

func (x *Alliance) ProtoReflect() protoreflect.Message {
	mi := &file_ai_service_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Alliance.ProtoReflect.Descriptor instead.
func (*Alliance) Descriptor() ([]byte, []int) {
	return file_ai_service_proto_rawDescGZIP(), []int{36}
}

func (x *Alliance) GetMembers() []string {
	if x != nil {
		return x.Members
	}
	return nil
}

type Conflict struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Parties       []string               `protobuf:"bytes,1,rep,name=parties,proto3" json:"parties,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Conflict) Reset() {
	*x = Conflict{}
	mi := &file_ai_service_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Conflict) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Conflict) ProtoMessage() {}

func (x *Conflict) ProtoReflect() protoreflect.Message {
	mi := &file_ai_service_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Conflict.ProtoReflect.Descriptor instead.
func (*Conflict) Descriptor() ([]byte, []int) {
	return file_ai_service_proto_rawDescGZIP(), []int{37}
}

func (x *Conflict) GetParties() []string {
	if x != nil {
		return x.Parties
	}
	return nil
}

type Mentorship struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Mentor        string                 `protobuf:"bytes,1,opt,name=mentor,proto3" json:"mentor,omitempty"`
	Student       string                 `protobuf:"bytes,2,opt,name=student,proto3" json:"student,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Mentorship) Reset() {
	*x = Mentorship{}
	mi := &file_ai_service_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Mentorship) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mentorship) ProtoMessage() {}

func (x *Mentorship) ProtoReflect() protoreflect.Message {
	mi := &file_ai_service_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mentorship.ProtoReflect.Descriptor instead.
func (*Mentorship) Descriptor() ([]byte, []int) {
	return file_ai_service_proto_rawDescGZIP(), []int{38}
}

func (x *Mentorship) GetMentor() string {
	if x != nil {
		return x.Mentor
	}
	return ""
}

func (x *Mentorship) GetStudent() string {
	if x != nil {
		return x.Student
	}
	return ""
}

type PlotRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Task             string                 `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	UserId           string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ProjectId        string                 `protobuf:"bytes,3,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Outline          *OutlineData           `protobuf:"bytes,4,opt,name=outline,proto3" json:"outline,omitempty"`
	Characters       *CharactersData        `protobuf:"bytes,5,opt,name=characters,proto3" json:"characters,omitempty"`
	WorkspaceContext map[string]string      `protobuf:"bytes,6,rep,name=workspace_context,json=workspaceContext,proto3" json:"workspace_context,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	CorrectionPrompt string                 `protobuf:"bytes,7,opt,name=correction_prompt,json=correctionPrompt,proto3" json:"correction_prompt,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *PlotRequest) Reset() {
	*x = PlotRequest{}
	mi := &file_ai_service_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlotRequest) ProtoMessage() {}

func (x *PlotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ai_service_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlotRequest.ProtoReflect.Descriptor instead.
func (*PlotRequest) Descriptor() ([]byte, []int) {
	return file_ai_service_proto_rawDescGZIP(), []int{39}
}

func (x *PlotRequest) GetTask() string {
	if x != nil {
		return x.Task
	}
	return ""
}

func (x *PlotRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *PlotRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *PlotRequest) GetOutline() *OutlineData {
	if x != nil {
		return x.Outline
	}
	return nil
}

func (x *PlotRequest) GetCharacters() *CharactersData {
	if x != nil {
		return x.Characters
	}
	return nil
}

func (x *PlotRequest) GetWorkspaceContext() map[string]string {
	if x != nil {
		return x.WorkspaceContext
	}
	return nil
}

func (x *PlotRequest) GetCorrectionPrompt() string {
	if x != nil {
		return x.CorrectionPrompt
	}
	return ""
}

type PlotResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Plot          *PlotData              `protobuf:"bytes,1,opt,name=plot,proto3" json:"plot,omitempty"`
	ExecutionTime float32                `protobuf:"fixed32,2,opt,name=execution_time,json=executionTime,proto3" json:"execution_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlotResponse) Reset() {
	*x = PlotResponse{}
	mi := &file_ai_service_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlotResponse) ProtoMessage() {}

func (x *PlotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ai_service_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlotResponse.ProtoReflect.Descriptor instead.
func (*PlotResponse) Descriptor() ([]byte, []int) {
	return file_ai_service_proto_rawDescGZIP(), []int{40}
}

func (x *PlotResponse) GetPlot() *PlotData {
	if x != nil {
		return x.Plot
	}
	return nil
}

func (x *PlotResponse) GetExecutionTime() float32 {
	if x != nil {
		return x.ExecutionTime
	}
	return 0
}

type PlotData struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TimelineEvents []*TimelineEventData   `protobuf:"bytes,1,rep,name=timeline_events,json=timelineEvents,proto3" json:"timeline_events,omitempty"`
	PlotThreads    []*PlotThread          `protobuf:"bytes,2,rep,name=plot_threads,json=plotThreads,proto3" json:"plot_threads,omitempty"`
	Conflicts      []*ConflictData        `protobuf:"bytes,3,rep,name=conflicts,proto3" json:"conflicts,omitempty"`
	KeyPlotPoints  *KeyPlotPoints         `protobuf:"bytes,4,opt,name=key_plot_points,json=keyPlotPoints,proto3" json:"key_plot_points,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *PlotData) Reset() {
	*x = PlotData{}
	mi := &file_ai_service_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlotData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlotData) ProtoMessage() {}

func (x *PlotData) ProtoReflect() protoreflect.Message {
	mi := &file_ai_service_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlotData.ProtoReflect.Descriptor instead.
func (*PlotData) Descriptor() ([]byte, []int) {
	return file_ai_service_proto_rawDescGZIP(), []int{41}
}

func (x *PlotData) GetTimelineEvents() []*TimelineEventData {
	if x != nil {
		return x.TimelineEvents
	}
	return nil
}

func (x *PlotData) GetPlotThreads() []*PlotThread {
	if x != nil {
		return x.PlotThreads
	}
	return nil
}

func (x *PlotData) GetConflicts() []*ConflictData {
	if x != nil {
		return x.Conflicts
	}
	return nil
}

func (x *PlotData) GetKeyPlotPoints() *KeyPlotPoints {
	if x != nil {
		return x.KeyPlotPoints
	}
	return nil
}

type TimelineEventData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventId       string                 `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	Timestamp     string                 `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Location      string                 `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty"`
	Title         string                 `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Participants  []string               `protobuf:"bytes,6,rep,name=participants,proto3" json:"participants,omitempty"`
	EventType     string                 `protobuf:"bytes,7,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"` // 冲突/转折/高潮/铺垫/结局
	Impact        *EventImpact           `protobuf:"bytes,8,opt,name=impact,proto3" json:"impact,omitempty"`
	Causes        []string               `protobuf:"bytes,9,rep,name=causes,proto3" json:"causes,omitempty"`
	Consequences  []string               `protobuf:"bytes,10,rep,name=consequences,proto3" json:"consequences,omitempty"`
	ChapterId     int32                  `protobuf:"varint,11,opt,name=chapter_id,json=chapterId,proto3" json:"chapter_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TimelineEventData) Reset() {
	*x = TimelineEventData{}
	mi := &file_ai_service_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimelineEventData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimelineEventData) ProtoMessage() {}

func (x *TimelineEventData) ProtoReflect() protoreflect.Message {
	mi := &file_ai_service_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimelineEventData.ProtoReflect.Descriptor instead.
func (*TimelineEventData) Descriptor() ([]byte, []int) {
	return file_ai_service_proto_rawDescGZIP(), []int{42}
}

func (x *TimelineEventData) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *TimelineEventData) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *TimelineEventData) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *TimelineEventData) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *TimelineEventData) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *TimelineEventData) GetParticipants() []string {
	if x != nil {
		return x.Participants
	}
	return nil
}

func (x *TimelineEventData) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *TimelineEventData) GetImpact() *EventImpact {
	if x != nil {
		return x.Impact
	}
	return nil
}

func (x *TimelineEventData) GetCauses() []string {
	if x != nil {
		return x.Causes
	}
	return nil
}

func (x *TimelineEventData) GetConsequences() []string {
	if x != nil {
		return x.Consequences
	}
	return nil
}

func (x *TimelineEventData) GetChapterId() int32 {
	if x != nil {
		return x.ChapterId
	}
	return 0
}

type EventImpact struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	OnPlot          string                 `protobuf:"bytes,1,opt,name=on_plot,json=onPlot,proto3" json:"on_plot,omitempty"`
	OnCharacters    map[string]string      `protobuf:"bytes,2,rep,name=on_characters,json=onCharacters,proto3" json:"on_characters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	EmotionalImpact string                 `protobuf:"bytes,3,opt,name=emotional_impact,json=emotionalImpact,proto3" json:"emotional_impact,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *EventImpact) Reset() {
	*x = EventImpact{}
	mi := &file_ai_service_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventImpact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventImpact) ProtoMessage() {}

func (x *EventImpact) ProtoReflect() protoreflect.Message {
	mi := &file_ai_service_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventImpact.ProtoReflect.Descriptor instead.
func (*EventImpact) Descriptor() ([]byte, []int) {
	return file_ai_service_proto_rawDescGZIP(), []int{43}
}

func (x *EventImpact) GetOnPlot() string {
	if x != nil {
		return x.OnPlot
	}
	return ""
}

func (x *EventImpact) GetOnCharacters() map[string]string {
	if x != nil {
		return x.OnCharacters
	}
	return nil
}

func (x *EventImpact) GetEmotionalImpact() string {
	if x != nil {
		return x.EmotionalImpact
	}
	return ""
}

type PlotThread struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	ThreadId           string                 `protobuf:"bytes,1,opt,name=thread_id,json=threadId,proto3" json:"thread_id,omitempty"`
	Title              string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description        string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Type               string                 `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"` // main, subplot
	Events             []string               `protobuf:"bytes,5,rep,name=events,proto3" json:"events,omitempty"`
	StartingEvent      string                 `protobuf:"bytes,6,opt,name=starting_event,json=startingEvent,proto3" json:"starting_event,omitempty"`
	ClimaxEvent        string                 `protobuf:"bytes,7,opt,name=climax_event,json=climaxEvent,proto3" json:"climax_event,omitempty"`
	ResolutionEvent    string                 `protobuf:"bytes,8,opt,name=resolution_event,json=resolutionEvent,proto3" json:"resolution_event,omitempty"`
	CharactersInvolved []string               `protobuf:"bytes,9,rep,name=characters_involved,json=charactersInvolved,proto3" json:"characters_involved,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *PlotThread) Reset() {
	*x = PlotThread{}
	mi := &file_ai_service_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlotThread) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlotThread) ProtoMessage() {}

func (x *PlotThread) ProtoReflect() protoreflect.Message {
	mi := &file_ai_service_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlotThread.ProtoReflect.Descriptor instead.
func (*PlotThread) Descriptor() ([]byte, []int) {
	return file_ai_service_proto_rawDescGZIP(), []int{44}
}

func (x *PlotThread) GetThreadId() string {
	if x != nil {
		return x.ThreadId
	}
	return ""
}

func (x *PlotThread) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PlotThread) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PlotThread) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *PlotThread) GetEvents() []string {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *PlotThread) GetStartingEvent() string {
	if x != nil {
		return x.StartingEvent
	}
	return ""
}

func (x *PlotThread) GetClimaxEvent() string {
	if x != nil {
		return x.ClimaxEvent
	}
	return ""
}

func (x *PlotThread) GetResolutionEvent() string {
	if x != nil {
		return x.ResolutionEvent
	}
	return ""
}

func (x *PlotThread) GetCharactersInvolved() []string {
	if x != nil {
		return x.CharactersInvolved
	}
	return nil
}

type ConflictData struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ConflictId       string                 `protobuf:"bytes,1,opt,name=conflict_id,json=conflictId,proto3" json:"conflict_id,omitempty"`
	Type             string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"` // 人物冲突/内心冲突/环境冲突
	Parties          []string               `protobuf:"bytes,3,rep,name=parties,proto3" json:"parties,omitempty"`
	Description      string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	EscalationEvents []string               `protobuf:"bytes,5,rep,name=escalation_events,json=escalationEvents,proto3" json:"escalation_events,omitempty"`
	ResolutionEvent  string                 `protobuf:"bytes,6,opt,name=resolution_event,json=resolutionEvent,proto3" json:"resolution_event,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ConflictData) Reset() {
	*x = ConflictData{}
	mi := &file_ai_service_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConflictData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConflictData) ProtoMessage() {}

func (x *ConflictData) ProtoReflect() protoreflect.Message {
	mi := &file_ai_service_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConflictData.ProtoReflect.Descriptor instead.
func (*ConflictData) Descriptor() ([]byte, []int) {
	return file_ai_service_proto_rawDescGZIP(), []int{45}
}

func (x *ConflictData) GetConflictId() string {
	if x != nil {
		return x.ConflictId
	}
	return ""
}

func (x *ConflictData) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ConflictData) GetParties() []string {
	if x != nil {
		return x.Parties
	}
	return nil
}

func (x *ConflictData) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ConflictData) GetEscalationEvents() []string {
	if x != nil {
		return x.EscalationEvents
	}
	return nil
}

func (x *ConflictData) GetResolutionEvent() string {
	if x != nil {
		return x.ResolutionEvent
	}
	return ""
}

type KeyPlotPoints struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	IncitingIncident string                 `protobuf:"bytes,1,opt,name=inciting_incident,json=incitingIncident,proto3" json:"inciting_incident,omitempty"`
	PlotPoint_1      string                 `protobuf:"bytes,2,opt,name=plot_point_1,json=plotPoint1,proto3" json:"plot_point_1,omitempty"`
	Midpoint         string                 `protobuf:"bytes,3,opt,name=midpoint,proto3" json:"midpoint,omitempty"`
	PlotPoint_2      string                 `protobuf:"bytes,4,opt,name=plot_point_2,json=plotPoint2,proto3" json:"plot_point_2,omitempty"`
	Climax           string                 `protobuf:"bytes,5,opt,name=climax,proto3" json:"climax,omitempty"`
	Resolution       string                 `protobuf:"bytes,6,opt,name=resolution,proto3" json:"resolution,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *KeyPlotPoints) Reset() {
	*x = KeyPlotPoints{}
	mi := &file_ai_service_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeyPlotPoints) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyPlotPoints) ProtoMessage() {}

func (x *KeyPlotPoints) ProtoReflect() protoreflect.Message {
	mi := &file_ai_service_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyPlotPoints.ProtoReflect.Descriptor instead.
func (*KeyPlotPoints) Descriptor() ([]byte, []int) {
	return file_ai_service_proto_rawDescGZIP(), []int{46}
}

func (x *KeyPlotPoints) GetIncitingIncident() string {
	if x != nil {
		return x.IncitingIncident
	}
	return ""
}

func (x *KeyPlotPoints) GetPlotPoint_1() string {
	if x != nil {
		return x.PlotPoint_1
	}
	return ""
}

func (x *KeyPlotPoints) GetMidpoint() string {
	if x != nil {
		return x.Midpoint
	}
	return ""
}

func (x *KeyPlotPoints) GetPlotPoint_2() string {
	if x != nil {
		return x.PlotPoint_2
	}
	return ""
}

func (x *KeyPlotPoints) GetClimax() string {
	if x != nil {
		return x.Climax
	}
	return ""
}

func (x *KeyPlotPoints) GetResolution() string {
	if x != nil {
		return x.Resolution
	}
	return ""
}

type DiagnosticReportData struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Passed             bool                   `protobuf:"varint,1,opt,name=passed,proto3" json:"passed,omitempty"`
	QualityScore       int32                  `protobuf:"varint,2,opt,name=quality_score,json=qualityScore,proto3" json:"quality_score,omitempty"`
	Issues             []*DiagnosticIssue     `protobuf:"bytes,3,rep,name=issues,proto3" json:"issues,omitempty"`
	CorrectionStrategy string                 `protobuf:"bytes,4,opt,name=correction_strategy,json=correctionStrategy,proto3" json:"correction_strategy,omitempty"`
	AffectedAgents     []string               `protobuf:"bytes,5,rep,name=affected_agents,json=affectedAgents,proto3" json:"affected_agents,omitempty"`
	ReasoningChain     []string               `protobuf:"bytes,6,rep,name=reasoning_chain,json=reasoningChain,proto3" json:"reasoning_chain,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *DiagnosticReportData) Reset() {
	*x = DiagnosticReportData{}
	mi := &file_ai_service_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiagnosticReportData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiagnosticReportData) ProtoMessage() {}

func (x *DiagnosticReportData) ProtoReflect() protoreflect.Message {
	mi := &file_ai_service_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiagnosticReportData.ProtoReflect.Descriptor instead.
func (*DiagnosticReportData) Descriptor() ([]byte, []int) {
	return file_ai_service_proto_rawDescGZIP(), []int{47}
}

func (x *DiagnosticReportData) GetPassed() bool {
	if x != nil {
		return x.Passed
	}
	return false
}

func (x *DiagnosticReportData) GetQualityScore() int32 {
	if x != nil {
		return x.QualityScore
	}
	return 0
}

func (x *DiagnosticReportData) GetIssues() []*DiagnosticIssue {
	if x != nil {
		return x.Issues
	}
	return nil
}

func (x *DiagnosticReportData) GetCorrectionStrategy() string {
	if x != nil {
		return x.CorrectionStrategy
	}
	return ""
}

func (x *DiagnosticReportData) GetAffectedAgents() []string {
	if x != nil {
		return x.AffectedAgents
	}
	return nil
}

func (x *DiagnosticReportData) GetReasoningChain() []string {
	if x != nil {
		return x.ReasoningChain
	}
	return nil
}

type DiagnosticIssue struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Id               string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Severity         string                 `protobuf:"bytes,2,opt,name=severity,proto3" json:"severity,omitempty"`
	Category         string                 `protobuf:"bytes,3,opt,name=category,proto3" json:"category,omitempty"`
	SubCategory      string                 `protobuf:"bytes,4,opt,name=sub_category,json=subCategory,proto3" json:"sub_category,omitempty"`
	Title            string                 `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	Description      string                 `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	RootCause        string                 `protobuf:"bytes,7,opt,name=root_cause,json=rootCause,proto3" json:"root_cause,omitempty"`
	AffectedEntities []string               `protobuf:"bytes,8,rep,name=affected_entities,json=affectedEntities,proto3" json:"affected_entities,omitempty"`
	Impact           string                 `protobuf:"bytes,9,opt,name=impact,proto3" json:"impact,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *DiagnosticIssue) Reset() {
	*x = DiagnosticIssue{}
	mi := &file_ai_service_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiagnosticIssue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiagnosticIssue) ProtoMessage() {}

func (x *DiagnosticIssue) ProtoReflect() protoreflect.Message {
	mi := &file_ai_service_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiagnosticIssue.ProtoReflect.Descriptor instead.
func (*DiagnosticIssue) Descriptor() ([]byte, []int) {
	return file_ai_service_proto_rawDescGZIP(), []int{48}
}

func (x *DiagnosticIssue) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DiagnosticIssue) GetSeverity() string {
	if x != nil {
		return x.Severity
	}
	return ""
}

func (x *DiagnosticIssue) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *DiagnosticIssue) GetSubCategory() string {
	if x != nil {
		return x.SubCategory
	}
	return ""
}

func (x *DiagnosticIssue) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *DiagnosticIssue) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *DiagnosticIssue) GetRootCause() string {
	if x != nil {
		return x.RootCause
	}
	return ""
}

func (x *DiagnosticIssue) GetAffectedEntities() []string {
	if x != nil {
		return x.AffectedEntities
	}
	return nil
}

func (x *DiagnosticIssue) GetImpact() string {
	if x != nil {
		return x.Impact
	}
	return ""
}

type HealthCheckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckRequest) Reset() {
	*x = HealthCheckRequest{}
	mi := &file_ai_service_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckRequest) ProtoMessage() {}

func (x *HealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ai_service_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckRequest.ProtoReflect.Descriptor instead.
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_ai_service_proto_rawDescGZIP(), []int{49}
}

type HealthCheckResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"` // healthy, degraded, unhealthy
	Checks        map[string]string      `protobuf:"bytes,2,rep,name=checks,proto3" json:"checks,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	mi := &file_ai_service_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ai_service_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_ai_service_proto_rawDescGZIP(), []int{50}
}

func (x *HealthCheckResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *HealthCheckResponse) GetChecks() map[string]string {
	if x != nil {
		return x.Checks
	}
	return nil
}

var File_ai_service_proto protoreflect.FileDescriptor

const file_ai_service_proto_rawDesc = "" +
	"\n" +
	"\x10ai_service.proto\x12\tqingyu.ai\"\xa4\x01\n" +
	"\x16GenerateContentRequest\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\x12\x1d\n" +
	"\n" +
	"chapter_id\x18\x02 \x01(\tR\tchapterId\x12\x16\n" +
	"\x06prompt\x18\x03 \x01(\tR\x06prompt\x124\n" +
	"\aoptions\x18\x04 \x01(\v2\x1a.qingyu.ai.GenerateOptionsR\aoptions\"\x94\x01\n" +
	"\x0fGenerateOptions\x12\x14\n" +
	"\x05model\x18\x01 \x01(\tR\x05model\x12\x1d\n" +
	"\n" +
	"max_tokens\x18\x02 \x01(\x05R\tmaxTokens\x12 \n" +
	"\vtemperature\x18\x03 \x01(\x02R\vtemperature\x12\x12\n" +
	"\x04stop\x18\x04 \x03(\tR\x04stop\x12\x16\n" +
	"\x06stream\x18\x05 \x01(\bR\x06stream\"\x8d\x01\n" +
	"\x17GenerateContentResponse\x12\x18\n" +
	"\acontent\x18\x01 \x01(\tR\acontent\x12\x1f\n" +
	"\vtokens_used\x18\x02 \x01(\x05R\n" +
	"tokensUsed\x12\x14\n" +
	"\x05model\x18\x03 \x01(\tR\x05model\x12!\n" +
	"\fgenerated_at\x18\x04 \x01(\x03R\vgeneratedAt\"\x8c\x01\n" +
	"\x0fRAGQueryRequest\x12\x14\n" +
	"\x05query\x18\x01 \x01(\tR\x05query\x12\x1d\n" +
	"\n" +
	"project_id\x18\x02 \x01(\tR\tprojectId\x12/\n" +
	"\afilters\x18\x03 \x01(\v2\x15.qingyu.ai.RAGFiltersR\afilters\x12\x13\n" +
	"\x05top_k\x18\x04 \x01(\x05R\x04topK\"\x92\x01\n" +
	"\n" +
	"RAGFilters\x12\x1b\n" +
	"\tdoc_types\x18\x01 \x03(\tR\bdocTypes\x12#\n" +
	"\rcharacter_ids\x18\x02 \x03(\tR\fcharacterIds\x12!\n" +
	"\ftimeline_ids\x18\x03 \x03(\tR\vtimelineIds\x12\x1f\n" +
	"\vchapter_ids\x18\x04 \x03(\tR\n" +
	"chapterIds\"X\n" +
	"\x10RAGQueryResponse\x12.\n" +
	"\aresults\x18\x01 \x03(\v2\x14.qingyu.ai.RAGResultR\aresults\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x05R\x05total\"\xe3\x01\n" +
	"\tRAGResult\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x18\n" +
	"\acontent\x18\x02 \x01(\tR\acontent\x12\x14\n" +
	"\x05score\x18\x03 \x01(\x02R\x05score\x12\x19\n" +
	"\bdoc_type\x18\x04 \x01(\tR\adocType\x12>\n" +
	"\bmetadata\x18\x05 \x03(\v2\".qingyu.ai.RAGResult.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"k\n" +
	"\x0eContextRequest\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\x12\x1d\n" +
	"\n" +
	"chapter_id\x18\x02 \x01(\tR\tchapterId\x12\x1b\n" +
	"\ttask_type\x18\x03 \x01(\tR\btaskType\"\x86\x01\n" +
	"\x0fContextResponse\x12\x1b\n" +
	"\ttask_type\x18\x01 \x01(\tR\btaskType\x125\n" +
	"\acontext\x18\x02 \x01(\v2\x1b.qingyu.ai.WorkspaceContextR\acontext\x12\x1f\n" +
	"\vtoken_count\x18\x03 \x01(\x05R\n" +
	"tokenCount\"\xe2\x02\n" +
	"\x10WorkspaceContext\x12F\n" +
	"\x11previous_chapters\x18\x01 \x03(\v2\x19.qingyu.ai.ChapterSummaryR\x10previousChapters\x12E\n" +
	"\x11active_characters\x18\x02 \x03(\v2\x18.qingyu.ai.CharacterInfoR\x10activeCharacters\x12A\n" +
	"\x0ftimeline_events\x18\x03 \x03(\v2\x18.qingyu.ai.TimelineEventR\x0etimelineEvents\x12;\n" +
	"\routline_nodes\x18\x04 \x03(\v2\x16.qingyu.ai.OutlineNodeR\foutlineNodes\x12?\n" +
	"\x0eworld_settings\x18\x05 \x01(\v2\x18.qingyu.ai.WorldSettingsR\rworldSettings\"f\n" +
	"\x0eChapterSummary\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12\x18\n" +
	"\asummary\x18\x03 \x01(\tR\asummary\x12\x14\n" +
	"\x05order\x18\x04 \x01(\x05R\x05order\"\x9b\x01\n" +
	"\rCharacterInfo\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x14\n" +
	"\x05alias\x18\x03 \x03(\tR\x05alias\x12\x18\n" +
	"\asummary\x18\x04 \x01(\tR\asummary\x12\x16\n" +
	"\x06traits\x18\x05 \x03(\tR\x06traits\x12\x1e\n" +
	"\n" +
	"background\x18\x06 \x01(\tR\n" +
	"background\"\x93\x01\n" +
	"\rTimelineEvent\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x16\n" +
	"\x06impact\x18\x04 \x01(\tR\x06impact\x12\"\n" +
	"\fparticipants\x18\x05 \x03(\tR\fparticipants\"k\n" +
	"\vOutlineNode\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x14\n" +
	"\x05level\x18\x04 \x01(\x05R\x05level\"\xd6\x01\n" +
	"\rWorldSettings\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12B\n" +
	"\bsettings\x18\x04 \x03(\v2&.qingyu.ai.WorldSettings.SettingsEntryR\bsettings\x1a;\n" +
	"\rSettingsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xec\x01\n" +
	"\x15AgentExecutionRequest\x12#\n" +
	"\rworkflow_type\x18\x01 \x01(\tR\fworkflowType\x12\x1d\n" +
	"\n" +
	"project_id\x18\x02 \x01(\tR\tprojectId\x12P\n" +
	"\n" +
	"parameters\x18\x03 \x03(\v20.qingyu.ai.AgentExecutionRequest.ParametersEntryR\n" +
	"parameters\x1a=\n" +
	"\x0fParametersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xa4\x01\n" +
	"\x16AgentExecutionResponse\x12!\n" +
	"\fexecution_id\x18\x01 \x01(\tR\vexecutionId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x16\n" +
	"\x06result\x18\x03 \x01(\tR\x06result\x12\x16\n" +
	"\x06errors\x18\x04 \x03(\tR\x06errors\x12\x1f\n" +
	"\vtokens_used\x18\x05 \x01(\x05R\n" +
	"tokensUsed\":\n" +
	"\fEmbedRequest\x12\x14\n" +
	"\x05texts\x18\x01 \x03(\tR\x05texts\x12\x14\n" +
	"\x05model\x18\x02 \x01(\tR\x05model\"E\n" +
	"\rEmbedResponse\x124\n" +
	"\n" +
	"embeddings\x18\x01 \x03(\v2\x14.qingyu.ai.EmbeddingR\n" +
	"embeddings\"A\n" +
	"\tEmbedding\x12\x16\n" +
	"\x06vector\x18\x01 \x03(\x02R\x06vector\x12\x1c\n" +
	"\tdimension\x18\x02 \x01(\x05R\tdimension\"\xea\x02\n" +
	"\x17CreativeWorkflowRequest\x12\x12\n" +
	"\x04task\x18\x01 \x01(\tR\x04task\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x1d\n" +
	"\n" +
	"project_id\x18\x03 \x01(\tR\tprojectId\x12'\n" +
	"\x0fmax_reflections\x18\x04 \x01(\x05R\x0emaxReflections\x12.\n" +
	"\x13enable_human_review\x18\x05 \x01(\bR\x11enableHumanReview\x12e\n" +
	"\x11workspace_context\x18\x06 \x03(\v28.qingyu.ai.CreativeWorkflowRequest.WorkspaceContextEntryR\x10workspaceContext\x1aC\n" +
	"\x15WorkspaceContextEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xd5\x04\n" +
	"\x18CreativeWorkflowResponse\x12!\n" +
	"\fexecution_id\x18\x01 \x01(\tR\vexecutionId\x12#\n" +
	"\rreview_passed\x18\x02 \x01(\bR\freviewPassed\x12)\n" +
	"\x10reflection_count\x18\x03 \x01(\x05R\x0freflectionCount\x120\n" +
	"\aoutline\x18\x04 \x01(\v2\x16.qingyu.ai.OutlineDataR\aoutline\x129\n" +
	"\n" +
	"characters\x18\x05 \x01(\v2\x19.qingyu.ai.CharactersDataR\n" +
	"characters\x12'\n" +
	"\x04plot\x18\x06 \x01(\v2\x13.qingyu.ai.PlotDataR\x04plot\x12L\n" +
	"\x11diagnostic_report\x18\a \x01(\v2\x1f.qingyu.ai.DiagnosticReportDataR\x10diagnosticReport\x12\x1c\n" +
	"\treasoning\x18\b \x03(\tR\treasoning\x12`\n" +
	"\x0fexecution_times\x18\t \x03(\v27.qingyu.ai.CreativeWorkflowResponse.ExecutionTimesEntryR\x0eexecutionTimes\x12\x1f\n" +
	"\vtokens_used\x18\n" +
	" \x01(\x05R\n" +
	"tokensUsed\x1aA\n" +
	"\x13ExecutionTimesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x02R\x05value:\x028\x01\"\xac\x02\n" +
	"\x0eOutlineRequest\x12\x12\n" +
	"\x04task\x18\x01 \x01(\tR\x04task\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x1d\n" +
	"\n" +
	"project_id\x18\x03 \x01(\tR\tprojectId\x12\\\n" +
	"\x11workspace_context\x18\x04 \x03(\v2/.qingyu.ai.OutlineRequest.WorkspaceContextEntryR\x10workspaceContext\x12+\n" +
	"\x11correction_prompt\x18\x05 \x01(\tR\x10correctionPrompt\x1aC\n" +
	"\x15WorkspaceContextEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"j\n" +
	"\x0fOutlineResponse\x120\n" +
	"\aoutline\x18\x01 \x01(\v2\x16.qingyu.ai.OutlineDataR\aoutline\x12%\n" +
	"\x0eexecution_time\x18\x02 \x01(\x02R\rexecutionTime\"\x9b\x02\n" +
	"\vOutlineData\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12\x14\n" +
	"\x05genre\x18\x02 \x01(\tR\x05genre\x12\x1d\n" +
	"\n" +
	"core_theme\x18\x03 \x01(\tR\tcoreTheme\x12'\n" +
	"\x0ftarget_audience\x18\x04 \x01(\tR\x0etargetAudience\x122\n" +
	"\x15estimated_total_words\x18\x05 \x01(\x05R\x13estimatedTotalWords\x122\n" +
	"\bchapters\x18\x06 \x03(\v2\x16.qingyu.ai.ChapterDataR\bchapters\x120\n" +
	"\tstory_arc\x18\a \x01(\v2\x13.qingyu.ai.StoryArcR\bstoryArc\"\xef\x02\n" +
	"\vChapterData\x12\x1d\n" +
	"\n" +
	"chapter_id\x18\x01 \x01(\x05R\tchapterId\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12\x18\n" +
	"\asummary\x18\x03 \x01(\tR\asummary\x12\x1d\n" +
	"\n" +
	"key_events\x18\x04 \x03(\tR\tkeyEvents\x12/\n" +
	"\x13characters_involved\x18\x05 \x03(\tR\x12charactersInvolved\x12#\n" +
	"\rconflict_type\x18\x06 \x01(\tR\fconflictType\x12%\n" +
	"\x0eemotional_tone\x18\a \x01(\tR\remotionalTone\x120\n" +
	"\x14estimated_word_count\x18\b \x01(\x05R\x12estimatedWordCount\x12!\n" +
	"\fchapter_goal\x18\t \x01(\tR\vchapterGoal\x12 \n" +
	"\vcliffhanger\x18\n" +
	" \x01(\tR\vcliffhanger\"\xa4\x01\n" +
	"\bStoryArc\x12\x14\n" +
	"\x05setup\x18\x01 \x03(\x05R\x05setup\x12#\n" +
	"\rrising_action\x18\x02 \x03(\x05R\frisingAction\x12\x16\n" +
	"\x06climax\x18\x03 \x03(\x05R\x06climax\x12%\n" +
	"\x0efalling_action\x18\x04 \x03(\x05R\rfallingAction\x12\x1e\n" +
	"\n" +
	"resolution\x18\x05 \x03(\x05R\n" +
	"resolution\"\xe4\x02\n" +
	"\x11CharactersRequest\x12\x12\n" +
	"\x04task\x18\x01 \x01(\tR\x04task\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x1d\n" +
	"\n" +
	"project_id\x18\x03 \x01(\tR\tprojectId\x120\n" +
	"\aoutline\x18\x04 \x01(\v2\x16.qingyu.ai.OutlineDataR\aoutline\x12_\n" +
	"\x11workspace_context\x18\x05 \x03(\v22.qingyu.ai.CharactersRequest.WorkspaceContextEntryR\x10workspaceContext\x12+\n" +
	"\x11correction_prompt\x18\x06 \x01(\tR\x10correctionPrompt\x1aC\n" +
	"\x15WorkspaceContextEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"v\n" +
	"\x12CharactersResponse\x129\n" +
	"\n" +
	"characters\x18\x01 \x01(\v2\x19.qingyu.ai.CharactersDataR\n" +
	"characters\x12%\n" +
	"\x0eexecution_time\x18\x02 \x01(\x02R\rexecutionTime\"\x9d\x01\n" +
	"\x0eCharactersData\x128\n" +
	"\n" +
	"characters\x18\x01 \x03(\v2\x18.qingyu.ai.CharacterDataR\n" +
	"characters\x12Q\n" +
	"\x14relationship_network\x18\x02 \x01(\v2\x1e.qingyu.ai.RelationshipNetworkR\x13relationshipNetwork\"\xe9\x04\n" +
	"\rCharacterData\x12!\n" +
	"\fcharacter_id\x18\x01 \x01(\tR\vcharacterId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1b\n" +
	"\trole_type\x18\x03 \x01(\tR\broleType\x12\x1e\n" +
	"\n" +
	"importance\x18\x04 \x01(\tR\n" +
	"importance\x12\x10\n" +
	"\x03age\x18\x05 \x01(\x05R\x03age\x12\x16\n" +
	"\x06gender\x18\x06 \x01(\tR\x06gender\x12\x1e\n" +
	"\n" +
	"appearance\x18\a \x01(\tR\n" +
	"appearance\x12<\n" +
	"\vpersonality\x18\b \x01(\v2\x1a.qingyu.ai.PersonalityDataR\vpersonality\x129\n" +
	"\n" +
	"background\x18\t \x01(\v2\x19.qingyu.ai.BackgroundDataR\n" +
	"background\x12\x1e\n" +
	"\n" +
	"motivation\x18\n" +
	" \x01(\tR\n" +
	"motivation\x12A\n" +
	"\rrelationships\x18\v \x03(\v2\x1b.qingyu.ai.RelationshipDataR\rrelationships\x12B\n" +
	"\x0fdevelopment_arc\x18\f \x01(\v2\x19.qingyu.ai.DevelopmentArcR\x0edevelopmentArc\x12\"\n" +
	"\rrole_in_story\x18\r \x01(\tR\vroleInStory\x12)\n" +
	"\x10first_appearance\x18\x0e \x01(\x05R\x0ffirstAppearance\x12+\n" +
	"\x11chapters_involved\x18\x0f \x03(\x05R\x10chaptersInvolved\"\x9e\x01\n" +
	"\x0fPersonalityData\x12\x16\n" +
	"\x06traits\x18\x01 \x03(\tR\x06traits\x12\x1c\n" +
	"\tstrengths\x18\x02 \x03(\tR\tstrengths\x12\x1e\n" +
	"\n" +
	"weaknesses\x18\x03 \x03(\tR\n" +
	"weaknesses\x12\x1f\n" +
	"\vcore_values\x18\x04 \x01(\tR\n" +
	"coreValues\x12\x14\n" +
	"\x05fears\x18\x05 \x01(\tR\x05fears\"\x89\x01\n" +
	"\x0eBackgroundData\x12\x18\n" +
	"\asummary\x18\x01 \x01(\tR\asummary\x12\x16\n" +
	"\x06family\x18\x02 \x01(\tR\x06family\x12\x1c\n" +
	"\teducation\x18\x03 \x01(\tR\teducation\x12'\n" +
	"\x0fkey_experiences\x18\x04 \x03(\tR\x0ekeyExperiences\"\x93\x01\n" +
	"\x10RelationshipData\x12\x1c\n" +
	"\tcharacter\x18\x01 \x01(\tR\tcharacter\x12#\n" +
	"\rrelation_type\x18\x02 \x01(\tR\frelationType\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x1a\n" +
	"\bdynamics\x18\x04 \x01(\tR\bdynamics\"\xa4\x01\n" +
	"\x0eDevelopmentArc\x12%\n" +
	"\x0estarting_point\x18\x01 \x01(\tR\rstartingPoint\x12%\n" +
	"\x0eturning_points\x18\x02 \x03(\tR\rturningPoints\x12!\n" +
	"\fending_point\x18\x03 \x01(\tR\vendingPoint\x12!\n" +
	"\fgrowth_theme\x18\x04 \x01(\tR\vgrowthTheme\"\xb4\x01\n" +
	"\x13RelationshipNetwork\x121\n" +
	"\talliances\x18\x01 \x03(\v2\x13.qingyu.ai.AllianceR\talliances\x121\n" +
	"\tconflicts\x18\x02 \x03(\v2\x13.qingyu.ai.ConflictR\tconflicts\x127\n" +
	"\vmentorships\x18\x03 \x03(\v2\x15.qingyu.ai.MentorshipR\vmentorships\"$\n" +
	"\bAlliance\x12\x18\n" +
	"\amembers\x18\x01 \x03(\tR\amembers\"$\n" +
	"\bConflict\x12\x18\n" +
	"\aparties\x18\x01 \x03(\tR\aparties\">\n" +
	"\n" +
	"Mentorship\x12\x16\n" +
	"\x06mentor\x18\x01 \x01(\tR\x06mentor\x12\x18\n" +
	"\astudent\x18\x02 \x01(\tR\astudent\"\x93\x03\n" +
	"\vPlotRequest\x12\x12\n" +
	"\x04task\x18\x01 \x01(\tR\x04task\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x1d\n" +
	"\n" +
	"project_id\x18\x03 \x01(\tR\tprojectId\x120\n" +
	"\aoutline\x18\x04 \x01(\v2\x16.qingyu.ai.OutlineDataR\aoutline\x129\n" +
	"\n" +
	"characters\x18\x05 \x01(\v2\x19.qingyu.ai.CharactersDataR\n" +
	"characters\x12Y\n" +
	"\x11workspace_context\x18\x06 \x03(\v2,.qingyu.ai.PlotRequest.WorkspaceContextEntryR\x10workspaceContext\x12+\n" +
	"\x11correction_prompt\x18\a \x01(\tR\x10correctionPrompt\x1aC\n" +
	"\x15WorkspaceContextEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"^\n" +
	"\fPlotResponse\x12'\n" +
	"\x04plot\x18\x01 \x01(\v2\x13.qingyu.ai.PlotDataR\x04plot\x12%\n" +
	"\x0eexecution_time\x18\x02 \x01(\x02R\rexecutionTime\"\x84\x02\n" +
	"\bPlotData\x12E\n" +
	"\x0ftimeline_events\x18\x01 \x03(\v2\x1c.qingyu.ai.TimelineEventDataR\x0etimelineEvents\x128\n" +
	"\fplot_threads\x18\x02 \x03(\v2\x15.qingyu.ai.PlotThreadR\vplotThreads\x125\n" +
	"\tconflicts\x18\x03 \x03(\v2\x17.qingyu.ai.ConflictDataR\tconflicts\x12@\n" +
	"\x0fkey_plot_points\x18\x04 \x01(\v2\x18.qingyu.ai.KeyPlotPointsR\rkeyPlotPoints\"\xee\x02\n" +
	"\x11TimelineEventData\x12\x19\n" +
	"\bevent_id\x18\x01 \x01(\tR\aeventId\x12\x1c\n" +
	"\ttimestamp\x18\x02 \x01(\tR\ttimestamp\x12\x1a\n" +
	"\blocation\x18\x03 \x01(\tR\blocation\x12\x14\n" +
	"\x05title\x18\x04 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x05 \x01(\tR\vdescription\x12\"\n" +
	"\fparticipants\x18\x06 \x03(\tR\fparticipants\x12\x1d\n" +
	"\n" +
	"event_type\x18\a \x01(\tR\teventType\x12.\n" +
	"\x06impact\x18\b \x01(\v2\x16.qingyu.ai.EventImpactR\x06impact\x12\x16\n" +
	"\x06causes\x18\t \x03(\tR\x06causes\x12\"\n" +
	"\fconsequences\x18\n" +
	" \x03(\tR\fconsequences\x12\x1d\n" +
	"\n" +
	"chapter_id\x18\v \x01(\x05R\tchapterId\"\xe1\x01\n" +
	"\vEventImpact\x12\x17\n" +
	"\aon_plot\x18\x01 \x01(\tR\x06onPlot\x12M\n" +
	"\ron_characters\x18\x02 \x03(\v2(.qingyu.ai.EventImpact.OnCharactersEntryR\fonCharacters\x12)\n" +
	"\x10emotional_impact\x18\x03 \x01(\tR\x0femotionalImpact\x1a?\n" +
	"\x11OnCharactersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xb3\x02\n" +
	"\n" +
	"PlotThread\x12\x1b\n" +
	"\tthread_id\x18\x01 \x01(\tR\bthreadId\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x12\n" +
	"\x04type\x18\x04 \x01(\tR\x04type\x12\x16\n" +
	"\x06events\x18\x05 \x03(\tR\x06events\x12%\n" +
	"\x0estarting_event\x18\x06 \x01(\tR\rstartingEvent\x12!\n" +
	"\fclimax_event\x18\a \x01(\tR\vclimaxEvent\x12)\n" +
	"\x10resolution_event\x18\b \x01(\tR\x0fresolutionEvent\x12/\n" +
	"\x13characters_involved\x18\t \x03(\tR\x12charactersInvolved\"\xd7\x01\n" +
	"\fConflictData\x12\x1f\n" +
	"\vconflict_id\x18\x01 \x01(\tR\n" +
	"conflictId\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12\x18\n" +
	"\aparties\x18\x03 \x03(\tR\aparties\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12+\n" +
	"\x11escalation_events\x18\x05 \x03(\tR\x10escalationEvents\x12)\n" +
	"\x10resolution_event\x18\x06 \x01(\tR\x0fresolutionEvent\"\xd4\x01\n" +
	"\rKeyPlotPoints\x12+\n" +
	"\x11inciting_incident\x18\x01 \x01(\tR\x10incitingIncident\x12 \n" +
	"\fplot_point_1\x18\x02 \x01(\tR\n" +
	"plotPoint1\x12\x1a\n" +
	"\bmidpoint\x18\x03 \x01(\tR\bmidpoint\x12 \n" +
	"\fplot_point_2\x18\x04 \x01(\tR\n" +
	"plotPoint2\x12\x16\n" +
	"\x06climax\x18\x05 \x01(\tR\x06climax\x12\x1e\n" +
	"\n" +
	"resolution\x18\x06 \x01(\tR\n" +
	"resolution\"\x8a\x02\n" +
	"\x14DiagnosticReportData\x12\x16\n" +
	"\x06passed\x18\x01 \x01(\bR\x06passed\x12#\n" +
	"\rquality_score\x18\x02 \x01(\x05R\fqualityScore\x122\n" +
	"\x06issues\x18\x03 \x03(\v2\x1a.qingyu.ai.DiagnosticIssueR\x06issues\x12/\n" +
	"\x13correction_strategy\x18\x04 \x01(\tR\x12correctionStrategy\x12'\n" +
	"\x0faffected_agents\x18\x05 \x03(\tR\x0eaffectedAgents\x12'\n" +
	"\x0freasoning_chain\x18\x06 \x03(\tR\x0ereasoningChain\"\x98\x02\n" +
	"\x0fDiagnosticIssue\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1a\n" +
	"\bseverity\x18\x02 \x01(\tR\bseverity\x12\x1a\n" +
	"\bcategory\x18\x03 \x01(\tR\bcategory\x12!\n" +
	"\fsub_category\x18\x04 \x01(\tR\vsubCategory\x12\x14\n" +
	"\x05title\x18\x05 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x06 \x01(\tR\vdescription\x12\x1d\n" +
	"\n" +
	"root_cause\x18\a \x01(\tR\trootCause\x12+\n" +
	"\x11affected_entities\x18\b \x03(\tR\x10affectedEntities\x12\x16\n" +
	"\x06impact\x18\t \x01(\tR\x06impact\"\x14\n" +
	"\x12HealthCheckRequest\"\xac\x01\n" +
	"\x13HealthCheckResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12B\n" +
	"\x06checks\x18\x02 \x03(\v2*.qingyu.ai.HealthCheckResponse.ChecksEntryR\x06checks\x1a9\n" +
	"\vChecksEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x012\x9a\x06\n" +
	"\tAIService\x12X\n" +
	"\x0fGenerateContent\x12!.qingyu.ai.GenerateContentRequest\x1a\".qingyu.ai.GenerateContentResponse\x12I\n" +
	"\x0eQueryKnowledge\x12\x1a.qingyu.ai.RAGQueryRequest\x1a\x1b.qingyu.ai.RAGQueryResponse\x12C\n" +
	"\n" +
	"GetContext\x12\x19.qingyu.ai.ContextRequest\x1a\x1a.qingyu.ai.ContextResponse\x12S\n" +
	"\fExecuteAgent\x12 .qingyu.ai.AgentExecutionRequest\x1a!.qingyu.ai.AgentExecutionResponse\x12b\n" +
	"\x17ExecuteCreativeWorkflow\x12\".qingyu.ai.CreativeWorkflowRequest\x1a#.qingyu.ai.CreativeWorkflowResponse\x12H\n" +
	"\x0fGenerateOutline\x12\x19.qingyu.ai.OutlineRequest\x1a\x1a.qingyu.ai.OutlineResponse\x12Q\n" +
	"\x12GenerateCharacters\x12\x1c.qingyu.ai.CharactersRequest\x1a\x1d.qingyu.ai.CharactersResponse\x12?\n" +
	"\fGeneratePlot\x12\x16.qingyu.ai.PlotRequest\x1a\x17.qingyu.ai.PlotResponse\x12>\n" +
	"\tEmbedText\x12\x17.qingyu.ai.EmbedRequest\x1a\x18.qingyu.ai.EmbedResponse\x12L\n" +
	"\vHealthCheck\x12\x1d.qingyu.ai.HealthCheckRequest\x1a\x1e.qingyu.ai.HealthCheckResponseB\x1cZ\x1aQingyu_backend/pkg/grpc/pbb\x06proto3"

var (
	file_ai_service_proto_rawDescOnce sync.Once
	file_ai_service_proto_rawDescData []byte
)

func file_ai_service_proto_rawDescGZIP() []byte {
	file_ai_service_proto_rawDescOnce.Do(func() {
		file_ai_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_ai_service_proto_rawDesc), len(file_ai_service_proto_rawDesc)))
	})
	return file_ai_service_proto_rawDescData
}

var file_ai_service_proto_msgTypes = make([]protoimpl.MessageInfo, 61)
var file_ai_service_proto_goTypes = []any{
	(*GenerateContentRequest)(nil),   // 0: qingyu.ai.GenerateContentRequest
	(*GenerateOptions)(nil),          // 1: qingyu.ai.GenerateOptions
	(*GenerateContentResponse)(nil),  // 2: qingyu.ai.GenerateContentResponse
	(*RAGQueryRequest)(nil),          // 3: qingyu.ai.RAGQueryRequest
	(*RAGFilters)(nil),               // 4: qingyu.ai.RAGFilters
	(*RAGQueryResponse)(nil),         // 5: qingyu.ai.RAGQueryResponse
	(*RAGResult)(nil),                // 6: qingyu.ai.RAGResult
	(*ContextRequest)(nil),           // 7: qingyu.ai.ContextRequest
	(*ContextResponse)(nil),          // 8: qingyu.ai.ContextResponse
	(*WorkspaceContext)(nil),         // 9: qingyu.ai.WorkspaceContext
	(*ChapterSummary)(nil),           // 10: qingyu.ai.ChapterSummary
	(*CharacterInfo)(nil),            // 11: qingyu.ai.CharacterInfo
	(*TimelineEvent)(nil),            // 12: qingyu.ai.TimelineEvent
	(*OutlineNode)(nil),              // 13: qingyu.ai.OutlineNode
	(*WorldSettings)(nil),            // 14: qingyu.ai.WorldSettings
	(*AgentExecutionRequest)(nil),    // 15: qingyu.ai.AgentExecutionRequest
	(*AgentExecutionResponse)(nil),   // 16: qingyu.ai.AgentExecutionResponse
	(*EmbedRequest)(nil),             // 17: qingyu.ai.EmbedRequest
	(*EmbedResponse)(nil),            // 18: qingyu.ai.EmbedResponse
	(*Embedding)(nil),                // 19: qingyu.ai.Embedding
	(*CreativeWorkflowRequest)(nil),  // 20: qingyu.ai.CreativeWorkflowRequest
	(*CreativeWorkflowResponse)(nil), // 21: qingyu.ai.CreativeWorkflowResponse
	(*OutlineRequest)(nil),           // 22: qingyu.ai.OutlineRequest
	(*OutlineResponse)(nil),          // 23: qingyu.ai.OutlineResponse
	(*OutlineData)(nil),              // 24: qingyu.ai.OutlineData
	(*ChapterData)(nil),              // 25: qingyu.ai.ChapterData
	(*StoryArc)(nil),                 // 26: qingyu.ai.StoryArc
	(*CharactersRequest)(nil),        // 27: qingyu.ai.CharactersRequest
	(*CharactersResponse)(nil),       // 28: qingyu.ai.CharactersResponse
	(*CharactersData)(nil),           // 29: qingyu.ai.CharactersData
	(*CharacterData)(nil),            // 30: qingyu.ai.CharacterData
	(*PersonalityData)(nil),          // 31: qingyu.ai.PersonalityData
	(*BackgroundData)(nil),           // 32: qingyu.ai.BackgroundData
	(*RelationshipData)(nil),         // 33: qingyu.ai.RelationshipData
	(*DevelopmentArc)(nil),           // 34: qingyu.ai.DevelopmentArc
	(*RelationshipNetwork)(nil),      // 35: qingyu.ai.RelationshipNetwork
	(*Alliance)(nil),                 // 36: qingyu.ai.Alliance
	(*Conflict)(nil),                 // 37: qingyu.ai.Conflict
	(*Mentorship)(nil),               // 38: qingyu.ai.Mentorship
	(*PlotRequest)(nil),              // 39: qingyu.ai.PlotRequest
	(*PlotResponse)(nil),             // 40: qingyu.ai.PlotResponse
	(*PlotData)(nil),                 // 41: qingyu.ai.PlotData
	(*TimelineEventData)(nil),        // 42: qingyu.ai.TimelineEventData
	(*EventImpact)(nil),              // 43: qingyu.ai.EventImpact
	(*PlotThread)(nil),               // 44: qingyu.ai.PlotThread
	(*ConflictData)(nil),             // 45: qingyu.ai.ConflictData
	(*KeyPlotPoints)(nil),            // 46: qingyu.ai.KeyPlotPoints
	(*DiagnosticReportData)(nil),     // 47: qingyu.ai.DiagnosticReportData
	(*DiagnosticIssue)(nil),          // 48: qingyu.ai.DiagnosticIssue
	(*HealthCheckRequest)(nil),       // 49: qingyu.ai.HealthCheckRequest
	(*HealthCheckResponse)(nil),      // 50: qingyu.ai.HealthCheckResponse
	nil,                              // 51: qingyu.ai.RAGResult.MetadataEntry
	nil,                              // 52: qingyu.ai.WorldSettings.SettingsEntry
	nil,                              // 53: qingyu.ai.AgentExecutionRequest.ParametersEntry
	nil,                              // 54: qingyu.ai.CreativeWorkflowRequest.WorkspaceContextEntry
	nil,                              // 55: qingyu.ai.CreativeWorkflowResponse.ExecutionTimesEntry
	nil,                              // 56: qingyu.ai.OutlineRequest.WorkspaceContextEntry
	nil,                              // 57: qingyu.ai.CharactersRequest.WorkspaceContextEntry
	nil,                              // 58: qingyu.ai.PlotRequest.WorkspaceContextEntry
	nil,                              // 59: qingyu.ai.EventImpact.OnCharactersEntry
	nil,                              // 60: qingyu.ai.HealthCheckResponse.ChecksEntry
}
var file_ai_service_proto_depIdxs = []int32{
	1,  // 0: qingyu.ai.GenerateContentRequest.options:type_name -> qingyu.ai.GenerateOptions
	4,  // 1: qingyu.ai.RAGQueryRequest.filters:type_name -> qingyu.ai.RAGFilters
	6,  // 2: qingyu.ai.RAGQueryResponse.results:type_name -> qingyu.ai.RAGResult
	51, // 3: qingyu.ai.RAGResult.metadata:type_name -> qingyu.ai.RAGResult.MetadataEntry
	9,  // 4: qingyu.ai.ContextResponse.context:type_name -> qingyu.ai.WorkspaceContext
	10, // 5: qingyu.ai.WorkspaceContext.previous_chapters:type_name -> qingyu.ai.ChapterSummary
	11, // 6: qingyu.ai.WorkspaceContext.active_characters:type_name -> qingyu.ai.CharacterInfo
	12, // 7: qingyu.ai.WorkspaceContext.timeline_events:type_name -> qingyu.ai.TimelineEvent
	13, // 8: qingyu.ai.WorkspaceContext.outline_nodes:type_name -> qingyu.ai.OutlineNode
	14, // 9: qingyu.ai.WorkspaceContext.world_settings:type_name -> qingyu.ai.WorldSettings
	52, // 10: qingyu.ai.WorldSettings.settings:type_name -> qingyu.ai.WorldSettings.SettingsEntry
	53, // 11: qingyu.ai.AgentExecutionRequest.parameters:type_name -> qingyu.ai.AgentExecutionRequest.ParametersEntry
	19, // 12: qingyu.ai.EmbedResponse.embeddings:type_name -> qingyu.ai.Embedding
	54, // 13: qingyu.ai.CreativeWorkflowRequest.workspace_context:type_name -> qingyu.ai.CreativeWorkflowRequest.WorkspaceContextEntry
	24, // 14: qingyu.ai.CreativeWorkflowResponse.outline:type_name -> qingyu.ai.OutlineData
	29, // 15: qingyu.ai.CreativeWorkflowResponse.characters:type_name -> qingyu.ai.CharactersData
	41, // 16: qingyu.ai.CreativeWorkflowResponse.plot:type_name -> qingyu.ai.PlotData
	47, // 17: qingyu.ai.CreativeWorkflowResponse.diagnostic_report:type_name -> qingyu.ai.DiagnosticReportData
	55, // 18: qingyu.ai.CreativeWorkflowResponse.execution_times:type_name -> qingyu.ai.CreativeWorkflowResponse.ExecutionTimesEntry
	56, // 19: qingyu.ai.OutlineRequest.workspace_context:type_name -> qingyu.ai.OutlineRequest.WorkspaceContextEntry
	24, // 20: qingyu.ai.OutlineResponse.outline:type_name -> qingyu.ai.OutlineData
	25, // 21: qingyu.ai.OutlineData.chapters:type_name -> qingyu.ai.ChapterData
	26, // 22: qingyu.ai.OutlineData.story_arc:type_name -> qingyu.ai.StoryArc
	24, // 23: qingyu.ai.CharactersRequest.outline:type_name -> qingyu.ai.OutlineData
	57, // 24: qingyu.ai.CharactersRequest.workspace_context:type_name -> qingyu.ai.CharactersRequest.WorkspaceContextEntry
	29, // 25: qingyu.ai.CharactersResponse.characters:type_name -> qingyu.ai.CharactersData
	30, // 26: qingyu.ai.CharactersData.characters:type_name -> qingyu.ai.CharacterData
	35, // 27: qingyu.ai.CharactersData.relationship_network:type_name -> qingyu.ai.RelationshipNetwork
	31, // 28: qingyu.ai.CharacterData.personality:type_name -> qingyu.ai.PersonalityData
	32, // 29: qingyu.ai.CharacterData.background:type_name -> qingyu.ai.BackgroundData
	33, // 30: qingyu.ai.CharacterData.relationships:type_name -> qingyu.ai.RelationshipData
	34, // 31: qingyu.ai.CharacterData.development_arc:type_name -> qingyu.ai.DevelopmentArc
	36, // 32: qingyu.ai.RelationshipNetwork.alliances:type_name -> qingyu.ai.Alliance
	37, // 33: qingyu.ai.RelationshipNetwork.conflicts:type_name -> qingyu.ai.Conflict
	38, // 34: qingyu.ai.RelationshipNetwork.mentorships:type_name -> qingyu.ai.Mentorship
	24, // 35: qingyu.ai.PlotRequest.outline:type_name -> qingyu.ai.OutlineData
	29, // 36: qingyu.ai.PlotRequest.characters:type_name -> qingyu.ai.CharactersData
	58, // 37: qingyu.ai.PlotRequest.workspace_context:type_name -> qingyu.ai.PlotRequest.WorkspaceContextEntry
	41, // 38: qingyu.ai.PlotResponse.plot:type_name -> qingyu.ai.PlotData
	42, // 39: qingyu.ai.PlotData.timeline_events:type_name -> qingyu.ai.TimelineEventData
	44, // 40: qingyu.ai.PlotData.plot_threads:type_name -> qingyu.ai.PlotThread
	45, // 41: qingyu.ai.PlotData.conflicts:type_name -> qingyu.ai.ConflictData
	46, // 42: qingyu.ai.PlotData.key_plot_points:type_name -> qingyu.ai.KeyPlotPoints
	43, // 43: qingyu.ai.TimelineEventData.impact:type_name -> qingyu.ai.EventImpact
	59, // 44: qingyu.ai.EventImpact.on_characters:type_name -> qingyu.ai.EventImpact.OnCharactersEntry
	48, // 45: qingyu.ai.DiagnosticReportData.issues:type_name -> qingyu.ai.DiagnosticIssue
	60, // 46: qingyu.ai.HealthCheckResponse.checks:type_name -> qingyu.ai.HealthCheckResponse.ChecksEntry
	0,  // 47: qingyu.ai.AIService.GenerateContent:input_type -> qingyu.ai.GenerateContentRequest
	3,  // 48: qingyu.ai.AIService.QueryKnowledge:input_type -> qingyu.ai.RAGQueryRequest
	7,  // 49: qingyu.ai.AIService.GetContext:input_type -> qingyu.ai.ContextRequest
	15, // 50: qingyu.ai.AIService.ExecuteAgent:input_type -> qingyu.ai.AgentExecutionRequest
	20, // 51: qingyu.ai.AIService.ExecuteCreativeWorkflow:input_type -> qingyu.ai.CreativeWorkflowRequest
	22, // 52: qingyu.ai.AIService.GenerateOutline:input_type -> qingyu.ai.OutlineRequest
	27, // 53: qingyu.ai.AIService.GenerateCharacters:input_type -> qingyu.ai.CharactersRequest
	39, // 54: qingyu.ai.AIService.GeneratePlot:input_type -> qingyu.ai.PlotRequest
	17, // 55: qingyu.ai.AIService.EmbedText:input_type -> qingyu.ai.EmbedRequest
	49, // 56: qingyu.ai.AIService.HealthCheck:input_type -> qingyu.ai.HealthCheckRequest
	2,  // 57: qingyu.ai.AIService.GenerateContent:output_type -> qingyu.ai.GenerateContentResponse
	5,  // 58: qingyu.ai.AIService.QueryKnowledge:output_type -> qingyu.ai.RAGQueryResponse
	8,  // 59: qingyu.ai.AIService.GetContext:output_type -> qingyu.ai.ContextResponse
	16, // 60: qingyu.ai.AIService.ExecuteAgent:output_type -> qingyu.ai.AgentExecutionResponse
	21, // 61: qingyu.ai.AIService.ExecuteCreativeWorkflow:output_type -> qingyu.ai.CreativeWorkflowResponse
	23, // 62: qingyu.ai.AIService.GenerateOutline:output_type -> qingyu.ai.OutlineResponse
	28, // 63: qingyu.ai.AIService.GenerateCharacters:output_type -> qingyu.ai.CharactersResponse
	40, // 64: qingyu.ai.AIService.GeneratePlot:output_type -> qingyu.ai.PlotResponse
	18, // 65: qingyu.ai.AIService.EmbedText:output_type -> qingyu.ai.EmbedResponse
	50, // 66: qingyu.ai.AIService.HealthCheck:output_type -> qingyu.ai.HealthCheckResponse
	57, // [57:67] is the sub-list for method output_type
	47, // [47:57] is the sub-list for method input_type
	47, // [47:47] is the sub-list for extension type_name
	47, // [47:47] is the sub-list for extension extendee
	0,  // [0:47] is the sub-list for field type_name
}

func init() { file_ai_service_proto_init() }
func file_ai_service_proto_init() {
	if File_ai_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_ai_service_proto_rawDesc), len(file_ai_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   61,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ai_service_proto_goTypes,
		DependencyIndexes: file_ai_service_proto_depIdxs,
		MessageInfos:      file_ai_service_proto_msgTypes,
	}.Build()
	File_ai_service_proto = out.File
	file_ai_service_proto_goTypes = nil
	file_ai_service_proto_depIdxs = nil
}
