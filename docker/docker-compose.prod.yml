# 后端生产环境 Docker Compose 配置
services:
  # MongoDB数据库
  mongodb:
    image: mongo:7.0
    container_name: qingyu-mongodb-prod
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD:-changeme}
      MONGO_INITDB_DATABASE: Qingyu_writer
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    networks:
      - qingyu-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: qingyu-redis-prod
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD:-changeme}
    volumes:
      - redis_data:/data
    networks:
      - qingyu-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 后端服务
  backend:
    build:
      context: ..
      dockerfile: docker/Dockerfile.prod
    container_name: qingyu-backend-prod
    restart: always
    ports:
      - "8080:8080"
    environment:
      - GIN_MODE=release
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - qingyu-network

networks:
  qingyu-network:
    name: qingyu-network
    driver: bridge

volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local
  redis_data:
    driver: local

